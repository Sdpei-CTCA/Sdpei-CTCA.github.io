<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>山东体育学院 WPS 365教育版 使用指南</title>
    <link href="/posts/ed956dd0/"/>
    <url>/posts/ed956dd0/</url>
    
    <content type="html"><![CDATA[<p>山东体育学院WPS365教育版现已开放使用，本指南旨在指导同学登录、使用、介绍权益等内容。</p><p>学校官方使用手册地址：<a href="https://365.kdocs.cn/l/cl10GIeePEKH">https://365.kdocs.cn/l/cl10GIeePEKH</a></p><p>不知道如何安装的同学可以看学校的文档↑</p><p>本文仅做经验分享。</p><h1 id="一、WPS-365教育版（原版）下载方式及登陆"><a href="#一、WPS-365教育版（原版）下载方式及登陆" class="headerlink" title="一、WPS 365教育版（原版）下载方式及登陆"></a>一、WPS 365教育版（原版）下载方式及登陆</h1><h2 id="1、电脑端下载"><a href="#1、电脑端下载" class="headerlink" title="1、电脑端下载"></a>1、电脑端下载</h2><p><u>下载方式一</u>：点击链接即可跳转至下载网址（校内校外均可访问）</p><p><a href="https://365.kdocs.cn/3rd/work/download/bGBihvXsEuw2y2az">https://365.kdocs.cn/3rd/work/download/bGBihvXsEuw2y2az</a></p><p><u>下载方式二</u>：在山东体育学院正版管理平台下载：<a href="https://ms.sdpei.edu.cn/">https://ms.sdpei.edu.cn/</a></p><p>(只允许在校园网范围内访问）</p><p>本方法的问题是：下载的版本都为32位版本（虽然写的64位实际为32位）。日常使用并无区别，若打开数据较大的文件，64位会比较快！</p><p><u>下载方法三（推荐！）</u>：下载官方版WPS，可根据需要选择32位与64位软件。</p><p>以上三种下载方式，在登陆校园账号均保持一致，无需担心。</p><h2 id="2、电脑端登陆"><a href="#2、电脑端登陆" class="headerlink" title="2、电脑端登陆"></a>2、电脑端登陆</h2><p><u>登陆方式一（教育版）</u>：安装完成后，点击右上角“立即登录”，然后点击“手机”，使用“智慧山体”绑定的手机号和短信验证码的方式进行登录（注：一定使用“智慧山体”绑定的手机号）。登陆后，勾选带有“山东体育学院”的账号，然后点击确认登录（如果显示有个人账户，也可勾选个人账号，两个账号可随时切换)。</p><p><u>登陆方式二（教育版或原版）（推荐）</u>：点击右上角“立即登录”，然后点击“SSO专属账号”，输入“sdpei”，使用“智慧山体”账号密码或扫描二维码的方式进行登录。</p><h2 id="3-手机端下载"><a href="#3-手机端下载" class="headerlink" title="3.手机端下载"></a>3.手机端下载</h2><p><u>下载方式</u>：使用官方链接<a href="https://365.kdocs.cn/3rd/work/download/bGBihvXsEuw2y2az">https://365.kdocs.cn/3rd/work/download/bGBihvXsEuw2y2az</a>，或应用商店搜索WPS。</p><h2 id="4-手机端登陆"><a href="#4-手机端登陆" class="headerlink" title="4.手机端登陆"></a>4.手机端登陆</h2><p><u>登陆方式一</u>：打开WPS软件首页，点击左上角头像，如果已在电脑端绑定微信，可使用微信登陆，如未绑定，可点击手机号登录。（注：一定使用“智慧山体”绑定的手机号）</p><p><u>登陆方式二（推荐）</u>：点击“更多登录方式”，点击“第三方企业”，输入“sdpei”，使用“智慧山体”账号密码进行登录。</p><h1 id="二、特色权益"><a href="#二、特色权益" class="headerlink" title="二、特色权益"></a>二、特色权益</h1><h2 id="1、100G云空间"><a href="#1、100G云空间" class="headerlink" title="1、100G云空间"></a>1、100G云空间</h2><p>每个账户分配100G的大容量云空间。启用“文档云同步”功能后，使用wps编辑文档时，云端文件实时更新.在任何设备上打开文档，都自动同步到最新版本，无需担心内容丢失或更新不及时。</p><h2 id="2、专属模板使用"><a href="#2、专属模板使用" class="headerlink" title="2、专属模板使用"></a>2、专属模板使用</h2><p>在创建文档时，可以在左侧的“教育专区”中，享受教育版特有的模板。</p><h2 id="3、WPS灵犀"><a href="#3、WPS灵犀" class="headerlink" title="3、WPS灵犀"></a>3、WPS灵犀</h2><p>基于AI的办公应用，可AI创作、AI搜索、AI阅读、数据分析，还可调用Deepseek模型。</p><p>登陆校园账号后，在左侧工作台或搜索WPS灵犀即可使用。</p><p>学校官方文档：<a href="https://365.kdocs.cn/l/cnYwbnFT18zT?openfrom=docs">https://365.kdocs.cn/l/cnYwbnFT18zT?openfrom=docs</a></p><h2 id="4、WPS会员专享功能（仅校园网用户可用）"><a href="#4、WPS会员专享功能（仅校园网用户可用）" class="headerlink" title="4、WPS会员专享功能（仅校园网用户可用）"></a>4、WPS会员专享功能（仅校园网用户可用）</h2><p>例如文档转换、PDF编辑等。详情请查看企业套餐权益。</p><h2 id="5、创建团队"><a href="#5、创建团队" class="headerlink" title="5、创建团队"></a>5、创建团队</h2><p>可创建校园团队，方便文档互相查看，编辑。</p><h2 id="6、免费计算机二级资料"><a href="#6、免费计算机二级资料" class="headerlink" title="6、免费计算机二级资料"></a>6、免费计算机二级资料</h2><p>详情请查看学校官方文档：<a href="https://365.kdocs.cn/l/ctUcp3hCJ4ns">https://365.kdocs.cn/l/ctUcp3hCJ4ns</a></p><h1 id="三、账号连接"><a href="#三、账号连接" class="headerlink" title="三、账号连接"></a>三、账号连接</h1><p>可将自己的校园账号与个人账号连接，互相使用账号权益（如果个人账户开通了会员，连接后校园账号也可使用相应权益）</p><p>点击右上角头像进入“账号中心一账号安全评分-关联我的个人账号”，即可将个人会员的权益复制到学校账号下在右上角“个人中心”关联个人账号，后续只需登录校园账号，即可使用所有权益。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2024年全国普通高校学科竞赛排行榜榜单解读（持续更新）</title>
    <link href="/posts/fda6550/"/>
    <url>/posts/fda6550/</url>
    
    <content type="html"><![CDATA[<h1 id="概述（阅前必读）"><a href="#概述（阅前必读）" class="headerlink" title="概述（阅前必读）"></a>概述（阅前必读）</h1><p>以下内容针对我院同学<u>个人学习能力</u>、<u>学习时长</u>、<u>赛事难易程度</u>、<u>赛事预计参与人数</u>等方面，对《2024年全国普通高校学科竞赛排行榜榜单》进行解读，对于<u>各学科的赛事</u>，进行资料梳理，提供相应建议与学习资料。与<u>数据科学与大数据技术</u>或<u>智能体育工程</u>专业的学习内容相差很大的学科，将排在稍后位置。同时会针对各个年级的同学，根据目前所学的内容给予相应的建议。</p><p>目前，学院对参与比赛并获奖的同学有奖励制度（详见学院文件）。同时，优秀的比赛成绩也有助于评奖评优，还请同学们一起努力，以赛促学。<strong>不要有心理压力，只要尽自己所能即可，相信自己！</strong></p><p><strong>可通过导航栏一键直达比赛详情。</strong></p><h1 id="一、计算机类"><a href="#一、计算机类" class="headerlink" title="一、计算机类"></a>一、计算机类</h1><h2 id="1-蓝桥杯全国软件和信息技术专业人才大赛"><a href="#1-蓝桥杯全国软件和信息技术专业人才大赛" class="headerlink" title="1.蓝桥杯全国软件和信息技术专业人才大赛"></a>1.蓝桥杯全国软件和信息技术专业人才大赛</h2><p>时间：2025年4月-6月（省赛与决赛）</p><h3 id="①个人赛"><a href="#①个人赛" class="headerlink" title="①个人赛"></a>①个人赛</h3><p>赛事官网：<a href="https://dasai.lanqiao.cn/pages/v7/dasai/competition/individual_competition.html">https://dasai.lanqiao.cn/pages/v7/dasai/competition/individual_competition.html</a></p><p>分类：程序算法赛、电子技术赛、程序设计赛</p><p>简介：</p><p>程序算法赛：经典的算法比赛，适合对C语言、Java、Python语言熟练运用基础语法的同学进行钻研。通过2-3个月的算法学习，刷题后，就有很大的概率得到省奖。</p><p>电子技术赛：我们不涉及这方面的学习（智能体育工程专业同学可能涉及，但不建议），不建议参赛。</p><p>程序设计赛：开发一款创新的软件，并用PPT进行介绍。不建议，开发周期长，且目前的学习处于基础阶段，建议有想法的同学可以钻研。</p><p>相关学习链接：<a href="https://www.bilibili.com/video/BV1YtcFemEBb/?spm_id_from=333.337.search-card.all.click&vd_source=75bc3ce7555a33d3c2bb623e639bd27b">https://www.bilibili.com/video/BV1YtcFemEBb</a></p><h3 id="②视觉艺术设计赛"><a href="#②视觉艺术设计赛" class="headerlink" title="②视觉艺术设计赛"></a>②视觉艺术设计赛</h3><p>赛事官网：<a href="https://design.lanqiao.cn/home">https://design.lanqiao.cn/home</a></p><p>分类：海报设计（静态、动态、命题、非命题）、文创设计、视频设计、动画设计、交互（UI）设计、环境艺术设计、工业产品设计、插画设计、AIGC微短剧设计、包装设计</p><p>简介：</p><p>由于科目较多，请自行查阅赛事官网下“赛道介绍”</p><p>建议：有美术特长，喜欢设计的同学，可以学习PS、Ai（矢量设计软件），参与海报设计，文创设计、插画设计等。对于环境艺术、工业产品、包装等，可能并非业余参与。</p><p>相关学习链接：<a href="https://www.bilibili.com/video/BV1oTDEYmEB4/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1oTDEYmEB4</a></p><h3 id="③项目实战赛"><a href="#③项目实战赛" class="headerlink" title="③项目实战赛"></a>③项目实战赛</h3><p>赛事官网：<a href="https://dasai.lanqiao.cn/match/practice/sign-up">https://dasai.lanqiao.cn/match/practice/sign-up</a></p><p>分类：智能体开发（个人赛）、人工智能（团队赛）</p><p>简介：</p><p>详细的赛事介绍请参阅赛事官网下“参赛须知”</p><p>智能体开发，通俗易懂来说就是大模型在某一领域的细分“小AI”，专长某一领域。</p><p>人工智能赛考察对机器学习、深度学习等人工智能领域实操能力。</p><p>建议大数据专业同学在学习机器学习后钻研该赛事。</p><p>相关学习链接：</p><p><a href="https://www.bilibili.com/video/BV1JUQBYLEVq/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1JUQBYLEVq</a></p><p><a href="https://www.bilibili.com/video/BV1yW421A7BH/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1yW421A7BH</a></p><h3 id="④数字科技创新赛"><a href="#④数字科技创新赛" class="headerlink" title="④数字科技创新赛"></a>④数字科技创新赛</h3><p>赛事官网：<a href="https://dasai.lanqiao.cn/match/innovation/sign-up/matchdetail">https://dasai.lanqiao.cn/match/innovation/sign-up/matchdetail</a></p><p>分类：数字科技创新赛（非命题）</p><p>简介：</p><p>创新赛，以现在现有科技视角尝试解决传统的问题（例如智能交通系统缓解高峰期交通拥堵情况）。</p><p>有想法的同学可以考虑一下，不要让自己的灵感因别人的目光短浅受到质疑而放弃！（当然前提是方案得实际一些）</p><p>相关学习链接：<a href="https://www.bilibili.com/video/BV1gncNeZEp4/?spm_id_from=333.337.search-card.all.click&vd_source=75bc3ce7555a33d3c2bb623e639bd27b">https://www.bilibili.com/video/BV1gncNeZEp4</a></p><h2 id="2-中国高校计算机大赛（C4赛事）"><a href="#2-中国高校计算机大赛（C4赛事）" class="headerlink" title="2.中国高校计算机大赛（C4赛事）"></a>2.中国高校计算机大赛（C4赛事）</h2><p>C4相关赛事含金量较高，但投入的学习时间较高。</p><h3 id="①大数据挑战赛"><a href="#①大数据挑战赛" class="headerlink" title="①大数据挑战赛"></a>①大数据挑战赛</h3><p>赛事官网：<a href="https://nercbds.tsinghua.edu.cn/bdc/">https://nercbds.tsinghua.edu.cn/bdc/</a></p><p>类型：数据分析、算法、机器学习</p><p>简介：需要有Python基础、算法基础、数据分析、机器学习相关能力。建议大数据专业学生在老师的帮助下钻研。</p><h3 id="②团体程序设计天梯赛"><a href="#②团体程序设计天梯赛" class="headerlink" title="②团体程序设计天梯赛"></a>②团体程序设计天梯赛</h3><p>赛事官网：<a href="https://gplt.patest.cn/regulation">https://gplt.patest.cn/</a></p><p>类型：算法设计（团体）</p><p>简介：编程，与蓝桥杯算法赛类似，偏向数据结构（STL容器)，据说比蓝桥杯含金量略低（因为是团体赛）</p><p>建议有编程基础的同学钻研（与蓝桥杯类似）</p><h3 id="③移动应用创新赛"><a href="#③移动应用创新赛" class="headerlink" title="③移动应用创新赛"></a>③移动应用创新赛</h3><p>赛事官网：<a href="https://www.appcontest.net/">https://www.appcontest.net/</a></p><p>类型：程序开发设计（团队）</p><p>简介：Apple主导的比赛，要求使用Swift为iOS开发，需要学习Swift语言。建议有一定开发经验的同学钻研。</p><h3 id="④网络技术挑战赛"><a href="#④网络技术挑战赛" class="headerlink" title="④网络技术挑战赛"></a>④网络技术挑战赛</h3><p>赛事官网：<a href="http://net.c4best.cn/">http://net.c4best.cn/</a></p><p>类型：网络技术相关</p><p>简介：很难，与网络技术相关的赛事，<font style="color:rgb(25, 27, 31);">涉及软件定义网络规划与部署、软件定义的云计算、软件定义网络测试等领域。对网络感兴趣的同学可以钻研。</font></p><h3 id="⑤人工智能创意赛"><a href="#⑤人工智能创意赛" class="headerlink" title="⑤人工智能创意赛"></a><font style="color:rgb(25, 27, 31);">⑤人工智能创意赛</font></h3><p>赛事官网：<a href="http://aicontest.baidu.com/">http://aicontest.baidu.com/</a></p><p>类型：人工智能应用</p><p>简介：百度主导的，以人工智能创新应用为主题。需要人工智能相关基础，与创新赛类似，需要找创新点</p><p>（对于我们院校可以发挥体育的优势（？））</p><h2 id="3-中国大学生计算机设计大赛"><a href="#3-中国大学生计算机设计大赛" class="headerlink" title="3.中国大学生计算机设计大赛"></a>3.中国大学生计算机设计大赛</h2><p>决赛时间：2025年7月17日-7月25日</p><p>官网：<a href="https://jsjds.blcu.edu.cn/">https://jsjds.blcu.edu.cn/</a></p><h3 id="①上海赛区（大数据应用-数媒游戏与交互设计-国际生“汉学”）"><a href="#①上海赛区（大数据应用-数媒游戏与交互设计-国际生“汉学”）" class="headerlink" title="①上海赛区（大数据应用&#x2F;数媒游戏与交互设计&#x2F;国际生“汉学”）"></a>①<font style="color:rgb(51, 51, 51);">上海赛区（大数据应用&#x2F;数媒游戏与交互设计&#x2F;国际生“汉学”）</font></h3><p><strong><font style="color:rgb(51, 51, 51);">1.大数据应用（2025年1月10日更新）</font></strong></p><p><font style="color:rgb(51, 51, 51);">包括以下小类：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）大数据实践赛。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）大数据主题赛。</font></p><p><font style="color:rgb(51, 51, 51);">说明：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）大数据实践赛作品指利用大数据思维发现社会生活和学科领域的应用需求， 利用大数据和相关新技术设计解决方案，实现数据分析、业务智能、辅助决策等应用。要求参赛作品以研究报告的形式呈现成果，报告内容主要包括：数据来源、应用场景、问题描述、系统设计与开发、数据分析与实验、主要结论等。参赛作品应提交的资料包括：研究报告、可运行的程序、必要的实验分析，以及数据集和相关工具软件。</font></p><p><font style="color:rgb(51, 51, 51);">作品涉及的领域包括但不限于：</font></p><p><font style="color:rgb(51, 51, 51);">① 环境与人类发展大数据（气象、环境、资源、农业、人口等）。</font></p><p><font style="color:rgb(51, 51, 51);">② 城市与交通大数据（城市、道路交通、物流等）。</font></p><p><font style="color:rgb(51, 51, 51);">③ 社交与WEB大数据（舆情、推荐、自然语言处理等）。</font></p><p><font style="color:rgb(51, 51, 51);">④ 金融与商业大数据（金融、电商等）。</font></p><p><font style="color:rgb(51, 51, 51);">⑤ 法律大数据（司法审判、普法宣传等）。</font></p><p><font style="color:rgb(51, 51, 51);">⑥ 生物与医疗大数据。</font></p><p><font style="color:rgb(51, 51, 51);">⑦ 文化与教育大数据（教育、艺术、文化、体育等）。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）大数据主题赛采用组委会命题方式，赛题（不超过</font><font style="color:rgb(51, 51, 51);">5</font><font style="color:rgb(51, 51, 51);">个）将适时在大赛相关网站公布</font><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);"><a href="https://jsjds.dhu.edu.cn/%EF%BC%8C%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89">https://jsjds.dhu.edu.cn/，持续更新中）</a></font><font style="color:rgb(51, 51, 51);">。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3</font><font style="color:rgb(51, 51, 51);">）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于</font><font style="color:rgb(51, 51, 51);">2件；每校本大类入围国赛的作品不多于3件。</font></p><p><font style="color:rgb(51, 51, 51);">（4）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</font></p><p><strong><font style="color:rgb(51, 51, 51);">2.数媒游戏与交互设计（2025年1月10日更新）</font></strong></p><p><font style="color:rgb(51, 51, 51);">包括以下小类：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）游戏设计普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）交互媒体设计普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3）虚拟现实VR与增强现实AR普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">4</font><font style="color:rgb(51, 51, 51);">）游戏设计专业组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">5</font><font style="color:rgb(51, 51, 51);">）交互媒体设计专业组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">6</font><font style="color:rgb(51, 51, 51);">）虚拟现实</font><font style="color:rgb(51, 51, 51);">VR与增强现实AR专业组。</font></p><p><font style="color:rgb(51, 51, 51);">说明：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）本大类的参赛作品应以“中国古代</font><font style="color:rgb(51, 51, 51);">物理</font><font style="color:rgb(51, 51, 51);">——中华优秀传统文化系列之</font><font style="color:rgb(51, 51, 51);">五</font><font style="color:rgb(51, 51, 51);">”为主题进行创作，主题的内容限定与说明，参见</font><font style="color:rgb(51, 51, 51);">参见大赛通知附件1</font><font style="color:rgb(51, 51, 51);">“二、竞赛主题与分组”。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）游戏设计作品的内容包括游戏角色设计、场景设计、动作设计、关卡设计、交互设计，是能体现反映主题，具有一定完整度的游戏作品。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3）交互媒体设计，是利用各种数字交互技术、人机交互技术，借助计算机输入输出设备、语音、图像、体感等各种手段，与作品实现动态交互。作品需体现一定的交互性与互动性，不能仅为静态版式设计。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">4）虚拟现实VR与增强现实AR作品，是利用VR、AR、MR、XR、AI等各种虚拟交互技术创作的围绕主题的作品。作品具有较强的视效沉浸感、用户体验感和作品交互性。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">5</font><font style="color:rgb(51, 51, 51);">）本大类作品分普通组与专业组进行报名与评比。普通组与专业组的划分，参见</font><font style="color:rgb(51, 51, 51);">参见大赛通知附件1</font><font style="color:rgb(51, 51, 51);">“二、竞赛主题与分组”。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">6</font><font style="color:rgb(51, 51, 51);">）本类参赛作品的任何一位作者的专业若归属于专业组专业清单，则该作品属于专业组作品。属于专业组的作品只能参加专业组选拔赛，不得参加普通组的竞赛；属于普通组的作品只能参加普通组竞赛，不得参加专业组的竞赛。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">7</font><font style="color:rgb(51, 51, 51);">）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于</font><font style="color:rgb(51, 51, 51);">2件；每校本大类入围国赛的作品不多于3件。</font></p><p><font style="color:rgb(51, 51, 51);">（8）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</font></p><p><strong><font style="color:rgb(51, 51, 51);">3.国际生“汉学”（2025年1月10日更新）</font></strong></p><p><font style="color:rgb(51, 51, 51);">包括以下小类：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）软件应用与开发。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）微课与</font><font style="color:rgb(51, 51, 51);">AI</font><font style="color:rgb(51, 51, 51);">辅助教学。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3）物联网应用。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">4</font><font style="color:rgb(51, 51, 51);">）大数据应用。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">5</font><font style="color:rgb(51, 51, 51);">）人工智能应用。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">6）信息可视化设计。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">7）数字媒体类。</font></p><p><font style="color:rgb(51, 51, 51);">（8）计算机音乐创作。</font></p><h3 id="②南京南赛区（微课与AI辅助教学-数媒静态设计）"><a href="#②南京南赛区（微课与AI辅助教学-数媒静态设计）" class="headerlink" title="②南京南赛区（微课与AI辅助教学&#x2F;数媒静态设计）"></a><font style="color:rgb(51, 51, 51);">②</font><strong><font style="color:rgb(51, 51, 51);">南京南赛区（微课与AI辅助教学&#x2F;数媒静态设计）</font></strong></h3><ol><li>微课与AI辅助教学（2025年1月10日更新）</li></ol><p>包括以下小类：</p><p>（1）人工智能通识课、计算机基础与应用类课程的微课、教学课件、虚拟仿真实验、教学案例。</p><p>（2）中、小学数学或自然科学课程的微课、教学课件、虚拟仿真实验、教学案例。</p><p>（3）汉语言文学（限于唐诗宋词）微课、教学课件、虚拟仿真实验、教学案例。</p><p>（4）微课与AI辅助教学专项赛。</p><p>说明：</p><p>（1）微课与AI辅助教学类别作品强调通过创新，设计质量高、互动性强的教育资源，涵盖广泛的教学资源开发，包括但不限于微课、教学课件、虚拟仿真实验、教学案例等，以促进人工智能领域的教育和智能时代需求的课程内容。同时体现AI技术在教育中的合理应用，特别关注AI通识教育中的教学实践，鼓励科教融汇、产教融合的实验设计和实际案例。</p><p>（2）微课是指运用包含人工智能技术等的信息技术，按照认知规律，呈现碎片化学习内容、过程及扩展素材的结构化数字资源，其内容以教学短视频为核心，并包含与该教学主题相关的教学设计、素材课件、教学反思、练习测试及学生反馈、教师点评等辅助性教学资源。</p><p>（3）教学课件是指根据教学大纲的要求，经过教学目标确定、教学内容和任务分析、教学活动结构及界面设计等环节，运用包含人工智能技术的信息技术手段制作的课程软件。</p><p>（4）虚拟仿真实验是指借助多媒体、仿真和虚拟现实等技术在计算机上营造可辅助、部分替代或全部替代传统教学和实验各操作环节的相关软硬件操作环境，实验者可以像在真实的环境中一样完成各种实验项目。</p><p>（5）教学案例是对典型教学过程实际情境的描述，以文档、视频、动画以及交互等形式展现。案例选择要真实而典型，内容包含案例事实描述和案例分析，案例分析必须包含问题及解决方案。</p><p>（6）微课与AI辅助教学类作品，应是经过精心设计的信息化智能化教学资源，能多层次多角度开展教学，实现因材施教，更好地服务受众。本类作品选题限定于人工智能通识课&#x2F;计算机基础与应用，中小学数学或自然科学，以及汉语言文学（限于唐诗宋词）这三个方面的相关教学内容。作品应遵循科学性和思想性统一、符合认知规律等原则，作品内容应立足于相关教材的对应知识点展开，其立场、观点需与教材保持一致。</p><p>（7）微课与AI辅助教学专项赛，采用大赛组委会命题方式，赛题（不超过5个）将适时在大赛相关网站公布（jsjds.jscs.org.cn，持续更新中）。</p><p>（8）每校参加省级赛的作品数量，由各省级赛组委会自行规定；每校本大类和每小类入围国赛的作品不多于2件。</p><p>（9）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</p><ol start="2"><li>数媒静态设计（2025年1月10日更新）</li></ol><p>包括以下小类：</p><p>（1）平面设计普通组。</p><p>（2）环境设计普通组。</p><p>（3）产品设计普通组。</p><p>（4）平面设计专业组。</p><p>（5）环境设计专业组。</p><p>（6）产品设计专业组。</p><p>说明：</p><p>（1）本大类的参赛作品应以“中国古代物理——中华优秀传统文化系列之五”为主题进行创作，主题的内容限定与说明，参见参见大赛通知附件1“二、竞赛主题与分组”。</p><p>（2）平面设计，内容包括服饰、手工艺、手工艺品、海报招贴设计、书籍装帧、包装设计等利用平面视觉传达设计的展示作品。</p><p>（3）环境设计，内容包括空间形象设计、建筑设计、室内设计、展示设计、园林景观设计、公共设施小品（景观雕塑、街道设施等）设计等环境艺术设计相关作品。</p><p>（4）产品设计，内容包括传统工业和现代科技产品设计，即有关生活、生产、运输、交通、办公、家电、医疗、体育、服饰等工具或生产设备等领域产品设计作品。该小类作品必须提供表达清晰的设计方案，包括产品名称、效果图、细节图、必要的结构图、基本外观尺寸图、产品创新点描述、制作工艺、材质等，如有实物模型更佳。要求体现创新性、可行性、美观性、环保性、完整性、经济性、功能性、人体工学及系统整合。</p><p>（5）本大类作品分普通组与专业组进行报名与评比。普通组与专业组的划分，参见参见大赛通知附件1“二、竞赛主题与分组”。</p><p>（6）本类参赛作品的任何一位作者的专业若归属于专业组专业清单，则该作品属于专业组作品。属于专业组的作品只能参加专业组选拔赛，不得参加普通组的竞赛；属于普通组的作品只能参加普通组竞赛，不得参加专业组的竞赛。</p><p>（7）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于2件；每校本大类入围国赛的作品不多于3件。</p><p>（8）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</p><h3 id="③济南赛区（软件应用与开发）"><a href="#③济南赛区（软件应用与开发）" class="headerlink" title="③济南赛区（软件应用与开发）"></a>③<font style="color:rgb(51, 51, 51);">济南赛区（软件应用与开发）</font></h3><p><strong><font style="color:rgb(51, 51, 51);">软件应用与开发（2025年1月10日更新）</font></strong></p><p><font style="color:rgb(51, 51, 51);">包括以下小类：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）Web应用与开发。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）管理信息系统。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3）移动应用开发（非游戏类）。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">4）算法设计与应用。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">5）软件应用与开发专项赛。</font></p><p><font style="color:rgb(51, 51, 51);">说明：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）软件应用与开发的作品是指运行在计算机（含智能手机）、网络、数据库系统之上的软件，提供信息管理、信息服务、移动应用、算法设计等功能或服务。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2</font><font style="color:rgb(51, 51, 51);">）</font><font style="color:rgb(51, 51, 51);">Web应用与开发类作品，一般是B&#x2F;S模式（即浏览器端&#x2F;服务器端应用程序），客户端通过浏览器与Web服务器进行数据交互，例如各类购物网站、博客、在线学习平台等。参赛者应提供能够在互联网上访问的网站地址（域名或IP地址均可）</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3</font><font style="color:rgb(51, 51, 51);">）管理信息系统类作品，一般为满足用户信息管理需求的信息系统，具有信息检索迅速、查找方便、可靠性高、存储量大等优点。该类系统通常具有信息的规划与管理、科学统计和快速查询等功能。例如财务管理系统、人力资源管理系统、商品信息管理系统等。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">4</font><font style="color:rgb(51, 51, 51);">）移动应用开发（非游戏）类作品，通常专指手机上的应用软件，或手机客户端。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">5</font><font style="color:rgb(51, 51, 51);">）算法设计与应用类作品，主要以算法为核心，以编程的方式解决实际问题并得以应用。既可以使用经典的传统算法，也可以利用机器学习、深度学习等</font><font style="color:rgb(51, 51, 51);">AI</font><font style="color:rgb(51, 51, 51);">算法与技术，支持</font><font style="color:rgb(51, 51, 51);">C、C++、Python、MATLAB等多种语言实现。涉及算法设计、逻辑推理、数学建模、编程实现等综合能力。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">6）软件应用与开发专项赛，采用大赛组委会命题方式，赛题（不超过</font><font style="color:rgb(51, 51, 51);">5</font><font style="color:rgb(51, 51, 51);">个）将适时在大赛</font><font style="color:rgb(51, 51, 51);">相关</font><font style="color:rgb(51, 51, 51);">网站公布</font><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);"><a href="http://jsjds.sdu.org.cn/%EF%BC%8C%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89">http://jsjds.sdu.org.cn/，持续更新中）</a></font><font style="color:rgb(51, 51, 51);">。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">7</font><font style="color:rgb(51, 51, 51);">）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于</font><font style="color:rgb(51, 51, 51);">2件；每校本大类入围国赛的作品不多于3件。</font></p><p><font style="color:rgb(51, 51, 51);">（8）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</font></p><h3 id="④杭州赛区（物联网应用-信息可视化设计-计算机音乐创作）"><a href="#④杭州赛区（物联网应用-信息可视化设计-计算机音乐创作）" class="headerlink" title="④杭州赛区（物联网应用&#x2F;信息可视化设计&#x2F;计算机音乐创作）"></a><font style="color:rgb(51, 51, 51);">④</font><strong><font style="color:rgb(51, 51, 51);">杭州赛区（物联网应用&#x2F;信息可视化设计&#x2F;计算机音乐创作）</font></strong></h3><p>物联网应用（2025年1月10日更新）</p><p>包括以下小类：</p><p>（1）城市管理。</p><p>（2）医药卫生。</p><p>（3）运动健身。</p><p>（4）数字生活。</p><p>（5）行业应用。</p><p>（6）物联网专项。</p><p>说明：</p><p>（1）城市管理小类作品是基于全面感知、互联、融合、智能计算等技术，以服务城市管理为目的，以提升社会经济生活水平为宗旨，形成某一具体应用的完整方案。例如：智慧交通、城市公用设施、市容环境与环境秩序监控、城市应急管理、城市安全防护、智能建筑、文物保护、数字博物馆等。</p><p>（2）医药卫生小类作品应以物联网技术为支撑，实现智能化医疗保健和医疗资源的智能化管理，满足医疗健康信息、医疗设备与用品、公共卫生安全的智能化管理与监控等方面的需求。建议但不限于如下方面：医院应用，如移动查房、婴儿防盗、自动取药、智能药瓶等；家庭应用，如远程监控家庭护理，包括婴儿监控、多动症儿童监控、老年人生命体征家庭监控、老年人家庭保健、病人家庭康复监控、医疗健康监测、远程健康保健、智能穿戴监测设备等。</p><p>（3）运动健康小类作品应以物联网技术为支撑，以提高运动训练水平和大众健身质量为目的。建议但不限于如下方面：运动数据分析、运动过程跟踪、运动效果监测、运动兴趣培养、运动习惯养成以及职业运动和体育赛事的专用管理训练系统和设备。</p><p>（4）数字生活小类作品应以物联网技术为支撑，通过稳定的通信方式实现家庭网络中各类电子产品之间的“互联互通”，以提升生活水平、提高生活便利程度为目的，包括：各类消费电子产品、通信产品、信息家电以及智能家居等。鼓励选手设计和创作利用各种传感器解决生活中的问题、满足生活需求的作品。</p><p>（5）行业应用小类作品应以物联网技术为支撑，解决某行业领域某一问题或实现某一功能，以提高生产效率、提升产品价值为目的，包括物联网技术在工业、零售、物流、农林、环保以及教育等行业的应用。</p><p>（6）物联网专项赛，采用大赛组委会命题方式，赛题（不超过5个）将适时在大赛相关网站公布（<a href="http://jsjds.hdu.edu.cn/%EF%BC%8C%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89%E3%80%82">http://jsjds.hdu.edu.cn/，持续更新中）。</a></p><p>（7）作品必须有可展示的实物系统，需提交实物系统功能演示视频（不超过10分钟）与相关设计说明书，现场答辩过程应对作品实物系统进行功能演示。</p><p>（8）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于2件；每校本大类入围国赛的作品不多于3件。</p><p>（9）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</p><ol start="2"><li>信息可视化设计（2025年1月10日更新）</li></ol><p>包括以下小类：</p><p>（1）信息图形设计。</p><p>（2）动态信息影像（MG动画）。</p><p>（3）交互信息设计。</p><p>（4）数据可视化。</p><p>说明：</p><p>（1）本大类的参赛作品应以“中华自然科学及其它优秀文化瑰宝（1911年以前）”为主题进行创作，主题的内容限定与说明，参见“二、竞赛主题与分组”。</p><p>（2）信息可视化设计侧重用视觉化的方式，归纳和表现信息与数据的内在联系、模式和结构，具体分为信息图形设计、动态信息影像、交互信息设计和数据可视化。</p><p>（3）信息图形指信息海报、信息图表、信息插图、信息导视或科普图形。</p><p>（4）动态信息影像指以可视化信息呈现为主的动画或影像合成作品。</p><p>（5）交互信息设计指基于电子触控媒介、虚拟现实等技术的可交互的可视化作品，如交互图表以及仪表板作品。</p><p>（6）数据可视化是指基于编程工具或数据分析工具（含开源软件）等实现的具有数据分析和数据可视化特点的作品。</p><p>（7）该类别要求作品具备艺术性、科学性、完整性、流畅性和实用性，而且作者需要对参赛作品信息数据来源的真实性、科学性与可靠性进行说明，并提供源文件。该类别作品需要提供完整的方案设计与技术实现的说明，特别是设计思想与现实意义。数据可视化和交互信息设计作品还需说明作品应用场景、设计理念，提交作品源代码、作品功能演示录屏等。</p><p>（8）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于2件；每校本大类入围国赛的作品不多于3件。</p><p>（9）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</p><ol start="3"><li>计算机音乐创作（2025年1月10日更新）</li></ol><p>包括以下小类：</p><p>（1）原创音乐类普通组。</p><p>（2）原创歌曲类普通组。</p><p>（3）视频音乐类普通组。</p><p>（4）交互音乐与声音装置类普通组。</p><p>（5）音乐混音类普通组。</p><p>（6）原创音乐类专业组。</p><p>（7）原创歌曲类专业组。</p><p>（8）视频音乐类专业组。</p><p>（9）交互音乐与声音装置类专业组。</p><p>（10）音乐混音类专业组。</p><p>说明：</p><p>（1）本大类的参赛作品应以“中国古代物理——中华优秀传统文化系列之五”为主题进行创作，主题的内容限定与说明，参见参见大赛通知附件1“二、竞赛主题与分组”。</p><p>（2）原创音乐类：纯音乐类，包含MIDI类作品、音频结合MIDI类作品。</p><p>（3）原创歌曲类：曲、编曲需原创，歌词至少拥有使用权。编曲部分至少有计算机MIDI制作或音频制作方式，不允许全录音作品。</p><p>（4）视频音乐类：音视频融合多媒体作品或视频配乐作品，视频部分鼓励原创。如非原创，需获得授权使用。音乐部分需原创。</p><p>（5）交互音乐与声音装置类：作品必须是以计算机编程为主要技术手段的交互音乐，或交互声音装置。提交文件包括能够反应作品整体艺术形态的、完整的音乐会现场演出或展演视频、工程文件、效果图、设计说明等相关文件。</p><p>（6）音乐混音类：根据提供的分轨文件，使用计算机平台及软件混音。</p><p>（7）本大类作品分普通组与专业组进行报名与评比。普通组与专业组的划分，参见参见大赛通知附件1“二、竞赛主题与分组”。</p><p>（8）本类参赛作品的任何一位作者的专业若归属于专业组专业清单，则该作品属于专业组作品。属于专业组的作品只能参加专业组竞赛，不得参加普通组竞赛；属于普通组的作品只能参加普通组竞赛，不得参加专业组竞赛。</p><p>（9）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于2件；每校本大类入围国赛的作品不多于3件。</p><p>（10）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</p><h3 id="⑤南京东赛区（人工智能应用-数媒动漫与短片）"><a href="#⑤南京东赛区（人工智能应用-数媒动漫与短片）" class="headerlink" title="⑤南京东赛区（人工智能应用&#x2F;数媒动漫与短片）"></a>⑤<font style="color:rgb(51, 51, 51);">南京东赛区（人工智能应用&#x2F;数媒动漫与短片）</font></h3><p><strong><font style="color:rgb(51, 51, 51);">1.人工智能应用（2025年1月10日更新）</font></strong></p><p><font style="color:rgb(51, 51, 51);">包括以下小类：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）人工智能实践赛。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）人工智能挑战赛。</font></p><p><font style="color:rgb(51, 51, 51);">说明：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）人工智能实践赛是针对某一领域的特定问题，提出基于人工智能的方法与思想的解决方案。这类作品，需要有完整的方案设计与代码实现，撰写相关文档，主要内容包括：作品应用场景、设计理念、技术方案、作品源代码、用户手册、作品功能演示视频等。本类作品必须有具体的方案设计与技术实现，现场答辩时，必须对系统功能进行演示。作品涉及的领域，包括但不限于：智能城市与交通（包括汽车无人驾驶）、智能家居与生活、智能医疗与健康、智能农林与环境、智能教育与文化、智能制造与工业互联网、三维建模与虚拟现实、自然语言处理、图像处理与模式识别方法研究、机器学习方法研究。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）人工智能挑战赛采用大赛组委会命题方式，赛题（不超过5个）将适时在大赛相关网站</font><strong><font style="color:rgb(51, 51, 51);">公</font></strong><font style="color:rgb(51, 51, 51);">布</font><strong><font style="color:rgb(51, 51, 51);">（</font></strong><a href="http://jspaa.cn/aic/"><strong><font style="color:rgb(30, 80, 162);">http://jspaa.cn/aic/</font></strong></a><font style="color:rgb(51, 51, 51);">，持续更新中</font><strong><font style="color:rgb(51, 51, 51);">）</font></strong><font style="color:rgb(51, 51, 51);">。挑战类项目的国赛将进行现场测试，并以测试效果与答辩成绩综合评定最终排名。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3</font><font style="color:rgb(51, 51, 51);">）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于</font><font style="color:rgb(51, 51, 51);">2件；每校本大类入围国赛的作品不多于3件。</font></p><p><font style="color:rgb(51, 51, 51);">（4）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</font></p><p><strong><font style="color:rgb(51, 51, 51);">2.数媒动漫与短片（2025年1月10日更新）</font></strong></p><p><font style="color:rgb(51, 51, 51);">包括以下小类：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）微电影普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）数字短片普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3）纪录片普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">4）动画普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">5）新媒体漫画普通组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">6</font><font style="color:rgb(51, 51, 51);">）微电影专业组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">7</font><font style="color:rgb(51, 51, 51);">）数字短片专业组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">8</font><font style="color:rgb(51, 51, 51);">）纪录片专业组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">9</font><font style="color:rgb(51, 51, 51);">）动画专业组。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">10</font><font style="color:rgb(51, 51, 51);">）新媒体漫画专业组。</font></p><p><font style="color:rgb(51, 51, 51);">说明：</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">1）本大类的参赛作品应以“中国古代</font><font style="color:rgb(51, 51, 51);">物理</font><font style="color:rgb(51, 51, 51);">——中华优秀传统文化系列之</font><font style="color:rgb(51, 51, 51);">五</font><font style="color:rgb(51, 51, 51);">”为主题进行创作，主题的内容限定与说明，参见大赛通知附件1“二、竞赛主题与分组”。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">2）微电影作品，应是借助电影拍摄手法创作的视频短片，反映一定故事情节和剧本创作。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">3）数字短片作品，是利用数字化设备拍摄的各类短片。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">4）纪录片作品，是利用数字化设备和纪实的手法，从参赛作者视角拍摄的与主题相关的短片。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">5）动画作品，是利用计算机创作的二维、三维动画，包含动画角色设计、动画场景设计、动画动作设计、动画声音和动画特效等内容。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">6）新媒体漫画作品，是利用数字化设备、传统手绘漫画创作和表现手法，创作的静态、动态和可交互的数字漫画作品。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">7</font><font style="color:rgb(51, 51, 51);">）本大类作品分普通组与专业组进行报名与评比。普通组与专业组的划分，参见</font><font style="color:rgb(51, 51, 51);">参见大赛通知附件1</font><font style="color:rgb(51, 51, 51);">“二、竞赛主题与分组”。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">8</font><font style="color:rgb(51, 51, 51);">）本类参赛作品的任何一位作者的专业若归属于专业组专业清单，则该作品属于专业组作品。属于专业组的作品只能参加专业组选拔赛，不得参加普通组的竞赛；属于普通组的作品只能参加普通组竞赛，不得参加专业组的竞赛。</font></p><p><font style="color:rgb(51, 51, 51);">（</font><font style="color:rgb(51, 51, 51);">9</font><font style="color:rgb(51, 51, 51);">）每校参加省级赛的每小类作品数量，由各省级赛组委会自行规定；每校每小类入围国赛的作品不多于</font><font style="color:rgb(51, 51, 51);">2件；每校本大类入围国赛的作品不多于3件。</font></p><p><font style="color:rgb(51, 51, 51);">（10）每件作品答辩时，到场作者不少于（含）2名，作者陈述（含作品演示）不超过10分钟。</font></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><font style="color:rgb(51, 51, 51);">总结</font></h3><p>赛事属于创意赛，部分对技术要求不高(艺术类，新媒体类），可以尝试！</p><h2 id="4-全国大学生计算机系统能力大赛"><a href="#4-全国大学生计算机系统能力大赛" class="headerlink" title="4.全国大学生计算机系统能力大赛"></a>4.<font style="color:rgb(95, 99, 104);background-color:rgb(255, 255, 248);">全国大学生计算机系统能力大赛</font></h2><h3 id="1-操作系统设计赛-全国-OS内核实现赛道"><a href="#1-操作系统设计赛-全国-OS内核实现赛道" class="headerlink" title="1.操作系统设计赛(全国)-OS内核实现赛道"></a>1.<strong><font style="color:rgb(0, 0, 0);">操作系统设计赛(全国)-OS内核实现赛道</font></strong></h3><p>官网：<a href="https://os.educg.net/#/index?TYPE=2025OS_K">https://os.educg.net/#/index?TYPE=2025OS_K</a></p><p><font style="color:rgb(36, 41, 46);">简介：要求参赛队综合运用各种知识（包括但不局限于操作系统、编译技术、计算机体系结构等），构思并实现一个综合性的操作系统内核，以展示参赛队面向目标硬件平台构造与优化操作系统的能力。</font></p><p><u><font style="color:rgb(36, 41, 46);">不建议，学习难度大。</font></u></p><h3 id="2-操作系统设计赛-全国-OS功能挑战赛道"><a href="#2-操作系统设计赛-全国-OS功能挑战赛道" class="headerlink" title="2.操作系统设计赛(全国)-OS功能挑战赛道"></a><font style="color:rgb(36, 41, 46);">2.</font><strong><font style="color:rgb(0, 0, 0);">操作系统设计赛(全国)-OS功能挑战赛道</font></strong></h3><p>官网：<a href="https://os.educg.net/#/index?TYPE=2025OS_F">https://os.educg.net/#/index?TYPE=2025OS_F</a></p><p><font style="color:rgb(36, 41, 46);">简介：各参赛队在比赛官网发布的题目中选择赛题。各参赛队选定赛题后，综合运用各种知识（包括但不局限于操作系统、编译技术、计算机体系结构等），构思并实现一个与操作系统相关的系统、模块、工具等，以展示面向需求的操作系统构造与优化等能力。</font></p><p><u><font style="color:rgb(36, 41, 46);">不建议，学习难度大。</font></u></p><h3 id="3-智能系统创新设计赛（小米杯）"><a href="#3-智能系统创新设计赛（小米杯）" class="headerlink" title="3.智能系统创新设计赛（小米杯）"></a>3.<strong><font style="color:rgb(0, 0, 0);">智能系统创新设计赛（小米杯）</font></strong></h3><p>官网：<a href="https://os.educg.net/#/index?TYPE=2025IS">https://os.educg.net/#/index?TYPE=2025IS</a><br>简介：本届比赛聚焦四足机器人控制、人工智能以及智能控制领域，主要涉及运动控制、自主</p><p>导航、图像处理、任务规划以及人机协作等技术的研究与应用。比赛要求参赛学生根据生活</p><p>中最为普遍的“物流配送”问题，设计一套兼容复杂环境的智能配送系统。相对2024年的</p><p>比赛赛题，今年的赛题更关注提升学生在算法和工程方面的能力，锻炼学生利用专业知识解</p><p>决复杂工程问题的能力，同时提高学生的执行力和团队协作精神。</p><p><u><font style="color:rgb(36, 41, 46);">不建议，学习难度大。</font></u></p><h2 id="5-百度之星·程序设计大赛"><a href="#5-百度之星·程序设计大赛" class="headerlink" title="5.百度之星·程序设计大赛"></a>5.百度之星·程序设计大赛</h2><p>官网：<a href="https://star.baidu.com/#/program-design-match?tab=1">https://star.baidu.com/#/program-design-match?tab=1</a></p><p>简介：<font style="color:rgb(51, 51, 51);">任务：初赛和决赛均为算法设计类题型。每场初赛时长3小时、8道题；决赛时长5小时、12道题。</font></p><p><font style="color:rgb(51, 51, 51);">选手使用程序设计语言解决挑战性算法问题。比赛期间，参赛选手登录比赛页面进行答题，每人使用1台电脑，需要在规定时间内使用C、C++、Python、Java等程序设计语言编写程序解决规定数量的问题。程序完成之后提交运行，系统自动判定程序为正确或错误并将运行的结果反馈给参赛者，根据答题AC数量和耗时进行排名晋级。重点考察选手的基础算法和程序设计能力。</font></p><p><font style="color:rgb(51, 51, 51);">与ACM比赛类似，需要在算法下钻研，建议有基础的同学学习后再考虑参与。</font></p><h2 id="6-全球校园人工智能算法精英大赛"><a href="#6-全球校园人工智能算法精英大赛" class="headerlink" title="6.全球校园人工智能算法精英大赛"></a><font style="color:rgb(51, 51, 51);">6.</font><font style="color:rgb(68, 68, 68);">全球校园人工智能算法精英大赛</font></h2><p>官网：<a href="https://www.saikr.com/vse/2024/DIGIX">https://www.saikr.com/vse/2024/DIGIX</a></p><p>简介：<font style="color:rgb(0, 0, 0);">大赛共设</font><strong><font style="color:rgb(0, 0, 0);">“算法挑战赛、算法精英赛、算法创新赛、算法应用赛、算法专项赛”</font></strong><font style="color:rgb(0, 0, 0);">共5个赛道。每个赛道按照参赛对象或竞赛内容分别设置若干赛项或赛题（具体各赛项比赛规则另行发布）。</font></p><h4 id="（一）算法挑战赛（赛题规则5月22日公布）"><a href="#（一）算法挑战赛（赛题规则5月22日公布）" class="headerlink" title="（一）算法挑战赛（赛题规则5月22日公布）"></a><font style="color:rgb(0, 0, 0);">（一）算法挑战赛（赛题规则5月22日公布）</font></h4><p><font style="color:rgb(0, 0, 0);">算法挑战赛设置</font><strong><font style="color:rgb(0, 0, 0);">“AI生成人脸图像鉴别、钢材表面缺陷检测与分割、基于无人机的人体行为识别、超声乳腺影像的BIRADS分类及特征识别、公共巴士辅助无线充电的电动汽车调度”</font></strong><font style="color:rgb(0, 0, 0);">5道算法赛题，涉及机器学习、计算机视觉、深度学习、目标检测、强化学习等技术，覆盖AIGC、智能制造、AIOT、智慧医疗、智能交通等领域，主要考察参赛选手算法创新和运用能力、思维能力和解决实际问题的能力，培养在校学生的创新、合作与竞争意识。</font></p><h4 id="（二）算法创新赛（赛题规则5月22日公布）"><a href="#（二）算法创新赛（赛题规则5月22日公布）" class="headerlink" title="（二）算法创新赛（赛题规则5月22日公布）"></a><font style="color:rgb(0, 0, 0);">（二）算法创新赛（赛题规则5月22日公布）</font></h4><p><font style="color:rgb(0, 0, 0);">积极响应国家”卓越工程师教育培养计划“，围绕国家产业结构调整和发展战略性新兴产业的人才需求，加快“新工科、新医科、新农科、新文科“等新学科建设，推动高校和企业通过校企合作途径联合人才。算法创新赛设置</font><strong><font style="color:rgb(0, 0, 0);">“人工智能+学科发展、人工智能+新四科、人工智能+未来场景”</font></strong><font style="color:rgb(0, 0, 0);">3类开放性赛题。赛题聚焦人工智能核心技术应用，鼓励学生跨专业、跨学院、跨学校组队合作，深入观察社会各行各业需求痛点，激发学生的创新意识，提升学生运用人工智能技术解决实际问题的创新思维能力。</font></p><h4 id="（三）算法应用赛（点击下列赛项名称，查看赛项规则具体内容）"><a href="#（三）算法应用赛（点击下列赛项名称，查看赛项规则具体内容）" class="headerlink" title="（三）算法应用赛（点击下列赛项名称，查看赛项规则具体内容）"></a><font style="color:rgb(0, 0, 0);">（三）算法应用赛</font><strong><font style="color:rgb(0, 0, 0);">（点击下列赛项名称，查看赛项规则具体内容）</font></strong></h4><p><font style="color:rgb(0, 0, 0);">算法应用赛设置“</font><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50197"><strong><font style="color:rgb(34, 191, 167);">无人车视觉巡航赛</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50198"><strong><font style="color:rgb(34, 191, 167);">地空机器人任务赛</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50199"><strong><font style="color:rgb(34, 191, 167);">空中机器人任务挑战赛</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50200"><strong><font style="color:rgb(34, 191, 167);">无人车任务挑战赛</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50201"><strong><font style="color:rgb(34, 191, 167);">视觉逻辑算法应用赛</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50202"><strong><font style="color:rgb(34, 191, 167);">穿越火线</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50203"><strong><font style="color:rgb(34, 191, 167);">机掷专家</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50204"><strong><font style="color:rgb(34, 191, 167);">紧急救援</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50205"><strong><font style="color:rgb(34, 191, 167);">巧夺天工</font></strong></a><strong><font style="color:rgb(0, 0, 0);">、</font></strong><a href="https://m.saikr.com/redirect_app_page/index?type=1&id=50206"><strong><font style="color:rgb(34, 191, 167);">智慧社区</font></strong></a><font style="color:rgb(0, 0, 0);">”共10个赛题，围绕机器人、无人车、无人机等行业和场景中的应用，主要考核参赛团队算法创新能力、编程能力、工程实践能力、独立科研能力和团队协作能力。</font></p><h4 id="（四）算法精英赛"><a href="#（四）算法精英赛" class="headerlink" title="（四）算法精英赛"></a><font style="color:rgb(0, 0, 0);">（四）算法精英赛</font></h4><p><font style="color:rgb(0, 0, 0);">算法精英赛赛题聚焦人工智能算法领域挑战性业务问题，提供真实应用场景数据，激发全球校园算法精英创新意识和竞争斗志，让一批天才少年脱颖而出，竞赛通知及规则单独发布。</font></p><h4 id="（五）算法专项赛"><a href="#（五）算法专项赛" class="headerlink" title="（五）算法专项赛"></a><font style="color:rgb(0, 0, 0);">（五）算法专项赛</font></h4><p><font style="color:rgb(0, 0, 0);">算法专项赛设置算法编程、数码艺术、仪器仪表、大语言模型、人工智能伦理、电力能源、工业机器视觉等方向赛题，竞赛通知及规则单独发布。</font></p><p><u><font style="color:rgb(0, 0, 0);">算法应用相关，建议喜欢相关方向的同学钻研。</font></u></p><h2 id="7-“中国软件杯”大学生软件设计大赛"><a href="#7-“中国软件杯”大学生软件设计大赛" class="headerlink" title="7.“中国软件杯”大学生软件设计大赛"></a><font style="color:rgb(0, 0, 0);">7.“中国软件杯”大学生软件设计大赛</font></h2><p>官网：<a href="https://www.cnsoftbei.com/">https://www.cnsoftbei.com/</a></p><p>分类：A组(普通高等教育组：研究生、本科生；职业教育组)、B组（职业教育组：中职、高职(高专)、职业本科）、信息技术应用创新专区</p><p>简介：设计软件的比赛，与C4的移动应用创新赛类似（不过语言不限），大部分赛题与人工智能相关，适合喜欢开发软件的同学。</p><h2 id="8-ACM-ICPC国际大学生程序设计竞赛"><a href="#8-ACM-ICPC国际大学生程序设计竞赛" class="headerlink" title="8.ACM-ICPC国际大学生程序设计竞赛"></a>8.ACM-ICPC国际大学生程序设计竞赛</h2><p>官网：<a href="https://icpc.global/">https://icpc.global/</a></p><p>类型：程序算法（团队赛）</p><p>简介：国际比赛，亚洲赛区。蓝桥杯升级版。适合对算法有进阶能力的同学。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>言简意赅C语言教案（轻松学C语言）</title>
    <link href="/posts/91950da/"/>
    <url>/posts/91950da/</url>
    
    <content type="html"><![CDATA[<p>山东体育学院计算机技术交流玩机社 是阿文ayaya &amp; 潍坊学院 Cookie 联合出品</p><h1 id="IxEx7">序：作者想说的话</h1>+ 此文档是由山东体育学院计算机技术交流玩机社（下面简称为 山体玩机社）的社长与他在潍坊学院的一名好朋友共同创作，纯属于为爱发电，如有错误，请联系山体玩机社社长或者加入玩机社群聊679383826进行反馈，我们看到后会进行修改，此外，由于创作人数较少，更新速度比较慢，需要予以谅解。+ 除了该文档以外，我们还会制作配套PPT，开讲座。+ B站 山体玩机社 已经更新讲座录播： <p><a href="https://www.bilibili.com/video/BV1JMyLYfEDG/?share_source=copy_web&vd_source=3038892c7c5c0b0b0c50f6a5b5dfb569">【山体玩机社】手把手带你理解C语言！言简意赅C语言 1.概述_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1wAS2YwEKS">【山体玩机社】言简意赅C语言 2.数据的存储与计算（上）_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1LymqYxEVf">【山体玩机社】言简意赅C语言 2.数据的存储与计算（下）_哔哩哔哩_bilibili</a></p><ul><li>由于该文档为爱发电，我们也清楚的知道这个项目的回本周期很长（包括但不限于时间成本 精力成本 运维成本），甚至不回本，因此，需要麻烦看到该文档的同学支持一下，哪怕说一句“社长加油”，我们也是需要得到正反馈的。</li><li>如果有想要加入创作团队的同学，请联系山体玩机社社长**<font style="background-color:#FBDE28;">或</font>**加入玩机社群聊679383826联系我们。</li><li>我们的教材使用的是谭浩强老师的《C语言程序设计 第四版》清华大学出版社。</li><li>我们引用的文章会在每一章最后标注，十分感谢各位作者。</li></ul><hr><h1 id="v2Li7">概述</h1><h2 id="vTjrF">什么是C语言？</h2><h3 id="zbxjk">计算机语言的三大变革：<u>机器语言</u>、<u>汇编语言</u>、<u>高级语言</u>。</h3><h4 id="kZdAN">机器语言：由0，1构成，二进制代码。</h4><h4 id="tPgVx">汇编语言：低级语言，利用机器指令直接向处理器发送请求。</h4><h4 id="hF98g">高级语言：更强的表述能力，容易学习。</h4><h4 id="EFDn0">编写高级语言后，由编译器转换为计算机理解的机器语言，并执行。</h4><h3 id="CNWuz">C语言为什么适合初学者？（不从语言本身特性，从学习的角度）</h3><h4 id="OHJEa"> 只有32个关键字，语言简练。有一部分暂时用不到。（Java有 53个）</h4><h4 id="DnnFW"> 语法限制不严格。</h4><h4 id="tHGGO"> 模块化，结构化，清晰明了。（前提是你得规范空格换行-_-，不然代码的可读性不会很高）</h4><h4 id="gnpCi"> 直接访问内存地址。（不急着了解）</h4><h4 id="GF9Mr"> C语言的主要单位是函数。（很快就能体会到）</h4><h4 id="dfXvd"> 是一种面向过程的编程语言，相对初学者来言比较简单，不会像面向对象~~<font style="color:#DF2A3F;">（不是你想的那个对象）</font>~~编程（全称为Object Oriented Programming，简称为OOP）语言的一样需要实现构造函数与析构函数。</h4><h4 id="j4Ty6"> 课本与课堂均使用C99版本（C语言的版本在一直更迭），如果在编写的时候出现不一样的情况，很有可能是C语言的版本变化所致。</h4><h3 id="sMmKI">用什么软件编写C语言程序？</h3><h4 id="OHsDR"> Dev-C++/Codeblocks 简洁，开箱即用，适合学习用途（蓝桥杯一般使用Dev-C++ 5.11版本）</h4><h4 id="NvAz0"> Clion/Visual Studio 专业，自动补全代码，适合做项目。</h4><h4 id="c4c6J"> Visual Studio Code 轻量化，功能强大，支持自动补全代码，内置Git，不过需要一定的动手能力（指配置开发环境）。</h4>> 此处放一下潍坊学院某位大牛学长手搓的文档，此处仅提供相关文档，后期>> [C/C++开发环境搭建（VSCode）](https://www.yuque.com/ruwang-rdeg8/wfustudy/set_c_environment)><h4 id="ZBFoQ">至于VC6.0++，支持C89标准，上古时代的产物，能不用就不用吧。</h4><h4 id="D0OAY">这里说的编程软件为IDE（Integrated Development Environment，集成开发环境），而不是编译器，针对Windows的编译器一般为Mingw64，请区分开编译器与编程软件</h4><h4 id="pkcbL">工具可以在山体玩机社QQ群文件获取。</h4><h2 id="LMsIV">开始编写第一个C语言程序！</h2><h3 id="mVgCY">理解一下函数</h3><h4 id="jyEVU">y=x+1 数学上的函数——x：自变量 y：因变量</h4>设x=2 <p>计算后得出 y&#x3D;3 </p><p>返回</p><p>C语言也是一样的</p><h4 id="fawFU"> 以y=x+1为函数名</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">TheWayToSolveTheFunction()<br>&#123;<br>    x=<span class="hljs-number">2</span>;<br>    y=x+<span class="hljs-number">1</span>;   <span class="hljs-comment">//y=2+1</span><br>    <span class="hljs-keyword">return</span> y;  <span class="hljs-comment">//y=3</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="q41ST">基于逻辑顺序，一步一步执行并获得结果。</h4><h3 id="sejOH">Hello World!</h3><h4 id="S4BwB"> 准备工作：浅浅理解头文件</h4><h5 id="R1rQF"> 头文件本质上也是函数，提供一系列神奇的妙妙工具。</h5><h5 id="o8RSn"> 相当于预制菜，人家做好了相关的函数，等你加热。</h5><h5 id="DxFmZ"> 例如printf() scanf()等输入输出函数。</h5><h5 id="qcI8I"> 当你在printf函数内填入数字等，会先将数据送到头文件内部的函数进行计算，随后将结果返回到原文件的函数。</h5><h5 id="kCumb"> 用头文件前，先告知编译器我要使用这个头文件，使用命令#include<stdio.h>（常用）</h5><h4 id="MUvey"> 开始编写</h4><h5 id="pG5bP"> 首先编写引用头文件：#include<stdio.h></h5><h5 id="hXhu9"> 编写主函数：main()（主函数每个C语言程序必须有，且他是主入口）</h5><h5 id="QwoK3"> 函数由大括号引起来：{     }</h5><h5 id="MQ841"> 编写输出函数：printf(“Hello world!”);</h5><h6 id="IXtYC"> 要输出的内容用引号引起来。</h6><h6 id="TPmiG"> 每一条在大括号内的函数，结束了要用分号隔开。</h6><h5 id="cz6c3"> 编写返回函数return 0; </h5><h6 id="uPsBz"> 虽然这个程序只有一个函数，但是当多个函数存在时，需要获取另一个函数的结果，就得用到return语句返回结果给下一个函数。</h6><h6 id="mHcL7"> 可以省略，未来会用到。</h6><h5 id="hWk5Z"> 开始编译运行。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/42374942/1728143148123-37f30ce2-bf2b-49fd-891f-19d4c7bb3a91.png"></p><h4 id="Wi2hX">需要注意的问题：</h4><h5 id="JdXdr"> 关键字要小写，否则编译器识别不出来。</h5><h5 id="U8bxD"> 括号，分号，引号等标点需要用英文输入法的标点。</h5><h5 id="ojtJQ"> 写一条语句就换行，直观，方便查找错误。</h5><h5 id="eJdIm"> 每一条不要忘记写使用分号结尾！</h5><h5 id="GBtuO"> 可以用//写注释，方便理解。注释内容不会被编译器识别。</h5><h4 id="ENlXg"> 程序基本上都是这个结构，往main函数里塞东西，吐出需要的数据</h4><h4 id="tejNS">例题：课本P4 例1.2 例1.3</h4>（虽然有些内容是后面才能学到的，但是经过讲解可以理解）<h2 id="Afjjk">扩展阅读链接（引用链接）</h2><h3 id="PPR7U"> [C语言头文件完全解析（连“#”我都给你讲明白）_include <stdlib.h>含义-CSDN博客](https://blog.csdn.net/CRAZY_eyes/article/details/104868178)</h3><h3 id="QxUZJ"> [c语言变量详解-CSDN博客](https://blog.csdn.net/m0_74195174/article/details/135744401)</h3><h3 id="DfbZe">[深入理解计算机系统（十三）：汇编语言和机器语言 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/37524989)</h3><h3 id="y5l6t">[C语言32个关键字-最详解释_c语言32个关键词的意思-CSDN博客](https://blog.csdn.net/qq_38972634/article/details/108398953)</h3><h3 id="fNLH9">[CodeBlocks安装与使用入门_code::blocks-CSDN博客](https://blog.csdn.net/cnds123/article/details/119963302)</h3><h3 id="LTRhZ">[Visual Studio 2022安装与使用教程_visual studio在哪里打开-CSDN博客](https://blog.csdn.net/InnerPeaceHQ/article/details/121716088)</h3><h3 id="UOzFV">[DevC++ 软件下载及安装教程（详细、具体）_devc++下载-CSDN博客](https://blog.csdn.net/m0_54158068/article/details/124080083)</h3><h1 id="p5DsP">数据的存储与计算</h1><h2 id="qMM8w">进制概述（二、八、十、十六）</h2><h3 id="jPmof">定义</h3><h4 id="EZn0b">二进制：0,1，逢二进一。（例：110=6）</h4><h4 id="BuQHX">八进制：01234567，逢八进一。（例：O12=10）</h4><h4 id="Ve6Tk">十进制：0123456789，逢十进一。（例：...不太想例）</h4><h4 id="naEf7">十六进制：0123456789 ABCDEF。(从A-F分别为10,11,12,13,14,15）逢十六进一。（例0xff=255）</h4><h3 id="N16RV">进制转换</h3><h4 id="kHIEA">十转二</h4>十进制数除以2，余数为权位上的数，得到商继续除以2，直到商为0终止，然后反向取余数。<p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1728803042538-7ba57e1a-9dfb-4973-8c9e-3dae9e05890d.png"></p><h4 id="Dmv5W">十转八、十转十六</h4><font style="color:rgb(77,77,77);background-color:rgb(255,255,255);">跟</font>十转二原理一样，十进制数除以8/16，余数为权位上的数，得到商继续除以8/16，直到商为0终止，然后反向取余数。<p> <img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1728803074840-86abdbb2-f387-407f-8fa0-9afaefdd70e4.png"></p><h4 id="ADubX">（二进制、八进制、十六进制）转十进制</h4>按权展开、相加即得十进制数。 <p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1728803103692-816d92c8-b7c2-4600-9907-1522999f400e.png"></p><h4 id="manH6">二转八、二转十六</h4><font style="color:rgb(77,77,77);background-color:rgb(255,255,255);">3位</font>二进制数按权展开相加得到1位八进制数。（注意事项，3位二进制转成八进制是从右到左开始转换，不足时补0）<p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1728803184365-4bb449e5-0f78-4a14-9552-1c1437c0f4f0.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1728803187138-c25ae7e9-792e-4fec-9734-31e5d8e13b96.png"></p><h4 id="ZyGMF">八转二</h4>八进制数通过除2取余法，得到二进制数，对每个八进制为3个二进制，不足时在最左边补零。 <p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1728803140448-0613691f-a280-4c84-9986-22b960307c85.png"></p><p>十六转二也是相同方法</p><p>1 位八进制数值可以转换为 3 位二进制数值</p><p>1 位十六进制数值可以转换为 4 位二进制数值</p><p>反之同理</p><blockquote><p>同样，此处放一篇潍坊学院某位学长写的进制转换的文档</p><p><a href="https://www.yuque.com/cookie-aaiwo/blswcp/tizbmhn817bbffpy">进制转换基本文档</a></p></blockquote><h2 id="B0sTh">常量与变量</h2><h3 id="lzsey">变量</h3><h4 id="fgWZg"> 变量的类型</h4><h5 id="OBT68"> 整型类型int short long（意味着以它们声明的变量，都是整数，没有小数）</h5><h5 id="abUAX"> 实型（浮点）类型float double（意味着以它们声明的变量，可以包含小数）</h5><h5 id="JZ8Oo"> 字符类型char （以它声明的变量可以存储一个单词或者一个符号（在ASCII码内）</h5><h5 id="ggdkb"> unsigned（无符号整数类型）学习过程不常用，用于表示非负数的时候使用。</h5><h4 id="LfT9V"> 变量的作用</h4><h5 id="B3zOA"> 变量就是一个小盒子，装运算需要用到的数据。</h5><h5 id="OS9I8"> 变量可以通过语句修改自己内部的数据，而常量不可以。</h5><h4 id="t6BJM"> 变量的命名规则</h4><h5 id="bt4UE"> 变量名只能包含字母、数字、下划线。</h5><h5 id="vRjtu"> 变量名不能以数字开头。</h5><h5 id="ERTGZ"> 不要使用C语言的关键字作为变量名。</h5><h5 id="QPT2b"> 尽量做到见名知意：例如年龄Age，分数Score，总和Sum。</h5><h3 id="Yph1I">常量</h3><h4 id="Ot3wI">变量可以在定义后反复变更值，而常量不可以。</h4><h4 id="MusBf">数字，字符等就是常量（不变的量），而定义的常量（例如PI=3.1415926）必须事先定义好才能用，称为符号常量。</h4><h4 id="AjbDn">符号常量用于一些特殊的值，例如π，e等。或一些预写的文本。</h4><h4 id="cQofI">符号常量是文本替换操作（很生硬的替换），因此可能会改变运算规则。</h4><h4 id="ISBdN">#define定义符号常量 后面不跟分号（因为这不是函数，这是与#include一样的命令）！</h4><h2 id="EA6nz">整型运算（例2.1）</h2><h3 id="vioB2">问题分析</h3><h4 id="FHRB7">鸡兔同笼，求方程组。</h4><h4 id="Ew4to">根据已知，限定条件范围。</h4><h4 id="dE0j0">编写程序，解问题。</h4>计算器也是根据程序一步步执行获得答案的。<h3 id="iQgQp">C语言中基本的算术运算都可以使用，加减乘除，且运算顺序与日常一致。</h3><h3 id="J9Z8m">printf的作用</h3><h4 id="SW4ke">在引号内的字符信息原封不动输出</h4><h4 id="VQnrG">遇到%d等特殊字符，则意味着将根据指定的变量输出。</h4><h4 id="fRaS3">遇到\n等特殊的转义字符，则意味着会对输出格式进行改变。</h4><h2 id="hwwPH">实型计算（例2.2）（例2.3）</h2><h3 id="lbYi7">问题分析（根据计算公式，将其结构化）</h3><h3 id="ciRhz">使用数学函数（如abs绝对值，sqrt开平方根）要引用math头文件。</h3><h3 id="pNYHt">%后，d为整型，f为浮点型（保留6位小数），c为字符型。</h3><h3 id="zGs2j">从高精度向低精度赋值可能会丢失一部分数据（double给float），建议根据情况为变量赋值。</h3><h3 id="w4B45">含e的形式为指数形式，通常表示10的x次方。口诀是：e前e后必有数，e后必须为整数。</h3><h3 id="Y62yw">单精度float对于小数点后的数值精度不够，可能会出现偏差，因此根据情况使用双精度浮点型double类型。</h3><h2 id="OMloX">字符运算（例2.4）</h2><h3 id="rRlDP">char类型的变量只能承接一个字符，多了塞不下。（可以填入的字符参照ASCII码)</h3><h3 id="FtZaw">为char类型赋值，需要用单引号将字符括起来。（例如 char ch='a';）</h3><h3 id="angcv">printf中每一个%c都对应逗号后的一个变量。</h3><h2 id="ckNzn">ASCII码与特殊字符</h2><h3 id="Y3uAr">ASCII码是什么？</h3>> <font style="color:rgb(25, 27, 31);">在计算机中，所有的数据在存储和运算时都要使用</font>[<font style="color:rgb(25, 27, 31);">二进制</font>](https://zhida.zhihu.com/search?content_id=211451468&content_type=Article&match_order=1&q=%E4%BA%8C%E8%BF%9B%E5%88%B6&zhida_source=entity)<font style="color:rgb(25, 27, 31);">表示。例如，像a、b、c、d这样的52个字母（包括大写）以及0、1等数字还有一些常用的符号（例如*、#、@等）在计算机中存储时也要使用</font>[<font style="color:rgb(25, 27, 31);">二进制数</font>](https://zhida.zhihu.com/search?content_id=211451468&content_type=Article&match_order=1&q=%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0&zhida_source=entity)<font style="color:rgb(25, 27, 31);">来表示，而具体用哪些二进制数字表示哪个符号，这就是编码。值得注意的是编码是信息从一种形式转换为另一种形式的过程；解码则是编码的逆过程。</font>><blockquote><p><font style="color:rgb(25, 27, 31);">不同的计算机要想互相通信并且不造成混乱，那么每台计算机就必须使用相同的编码规则，于是</font><a href="https://zhida.zhihu.com/search?content_id=211451468&content_type=Article&match_order=1&q=%E7%BE%8E%E5%9B%BD%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86%E5%AD%A6%E4%BC%9A&zhida_source=entity"><font style="color:rgb(25, 27, 31);">美国国家标准学会</font></a><font style="color:rgb(25, 27, 31);">（American National Standard Institute，ANSI）制定了ASCII编码。</font></p></blockquote><p>简单来说：在计算机内部有一个字典，将你输入的字符通过字典翻译成机器码，告诉计算机你要输入（或者输出）的字符是什么。</p><p>这样的字符有好几本，例如ASCII、Unicode、UTF-8等。</p><p>ASCII码的范围为0-127，超过这个范围会报错。</p><h4 id="bQlCM">在C语言中，我们输入输出的字符遵循ASCII码的规则，字符因此还获得了一些“变量”的功能。</h4><h4 id="vUrBp">——ASCII码需要背吗？——理论来说需要，但是目前我们只要记住一小部分（推荐记住大写字母 A(97)，小写字母 a(65)，空格字符 (32)，数字字符 0(48)，</h4><h4 id="lqI5O">如果是需要其它字符，根据前面的向后推就行，比如小写字母 c 是在小写字母 a 后面，那么就是 a+2=65+2=67）</h4><h3 id="k2Pfr">字符常量与字符变量(例2.5 例2.6）</h3><h4 id="XYwoX">字符常量是用单引号括起来的一个字符（'a'），单引号只是一个起止符，并不是字符常量的一部分。</h4><h4 id="szXg5">字符变量则是用来承接字符常量（例如 声明变量char = ch后 ch='a'），并且只能存放一个字符。</h4><h4 id="XkA8f">理论来说，字符变量承接的其实是字符的ASCII码，因此你也可以用数字替代字符。</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br>main()<br>&#123;<br>    <span class="hljs-type">char</span> ch = <span class="hljs-number">97</span>;<span class="hljs-comment">// a的ASCII码 等效于char ch = &#x27;a&#x27;;</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,ch);<span class="hljs-comment">//输出结果是a</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>因此，你可以用加减乘除去动这个变量，获得别的字符。（不能超过127，不然会报错）</p><p>（例如a不停地+1+1，可以加到z，在未来学习的循环运算里可以一口气输出26个小写字母）</p><h3 id="qxHUt">字符串常量（浅了解，数组会细讲）</h3><h4 id="jMZht">单引号括起来的 一个字符 是 字符常量</h4><h4 id="H735k">双引号括起来的 一串字符 是 字符串常量</h4><h4 id="fCf7H">没有能保存字符串常量的字符串变量，我们会使用数组对字符串进行操作（未来会学到）</h4><h3 id="XlpSL">符号常量（之前已经说明过：[点击跳转](https://www.yuque.com/shiawenayaya/gdindg/fvslnq8ursl9oegg#Yph1I)）</h3><h4 id="ep28Z">将常用的数学符号设为常量，方便反复调用，并便捷修改。</h4><h4 id="n75hX">例如：π，e，r（圆的半径）。</h4><h4 id="RxfVn">使用#define定义，生硬的文本替换操作，所以注意定义不要有差错。</h4><h2 id="cDR1Z">算数运算符和算数表达式</h2><h3 id="NOUaV">基本算术运算符</h3>加减乘除，多了个模除（除法，但是结果是余数）<p>与数学计算方法一致，先乘除再加减，被除数不能为0（模除左右两边必须为整数）</p><h3 id="sGRkv">自增自减运算符（经常用于循环语句）</h3>①根据++（--）的位置，有不一样的运算方式。<p>i++，该语句结束前i的变量不变化，结束后i则变化。</p><p>++i，该语句结束前i的变量已经变化，结束后无变化.（因为已经加完了）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br>main()<br>&#123;<br>    <span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,i++);<span class="hljs-comment">//输出为1，结束后为2</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,i);<span class="hljs-comment">//此时为2</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,++i);<span class="hljs-comment">//输出为3，加了之后输出出来的</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,i);<span class="hljs-comment">//输出仍是3，上一条语句的自增操作已经结束</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>②只能用于变量，不能作用于常量（常量是变不动的）</p><h3 id="zWNiJ">算术表达式（变量常量函数大乱斗！）</h3>①例：a*b+sin(x)-π（其中a,b为定义的整型变量，sinx为数学函数（之后会讲到），π为定义的符号常量）<p>②遇到跟小数运算怎么办？不用担心，C语言会自动将结果换成当前最高精度的数据类型（小的用float大的用double）</p><p>③强制类型转换：将表达式的结果换成你想要的样子——(小数点部分可能会直接抹去）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br>main()<br>&#123;<br>    <span class="hljs-type">int</span> a=<span class="hljs-number">10</span>;<br>    <span class="hljs-type">double</span> b,c;<br>    b=(<span class="hljs-type">double</span>)a;<span class="hljs-comment">//将变量a的值转换为double类型赋给变量b，请注意这不会改变a本身的数据类型。</span><br>    c=(<span class="hljs-type">float</span>)(a+b);<span class="hljs-comment">//强制类型转换的格式为（类型名）（表达式）</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="V1Hkv">C运算符与C表达式</h2><h3 id="c0yQE">C运算符（关系，逻辑的运算）</h3><h4 id="eKdIj">算术运算符： + - * / %（加减乘除 模除）//注：回来记得把一、换成圈1</h4><h4 id="SJesV">关系运算符：> < ==(是否相等）>= <= !=(不等于）</h4><h4 id="Y3T5N">逻辑运算符： ！(取反。非真即假，非假即真）&&（与运算符。同真为真，一假为假） ｜｜（或运算符。一真为真，同假为假）</h4><h4 id="D6BJO">赋值运算符： = （将运算后的值赋给变量：b=a+c;)</h4><h4 id="b6C5M">条件运算符：（后面会学到）A？B：C（如果条件 A 成立，执行 B，否则执行 C）</h4><h4 id="ENElC">逗号运算符：，（用逗号连接多个运算符，顺序执行）</h4><h4 id="Ben1W">指针运算符：（c语言直接访问内存的核心，暂时不用了解太多） &（取址符号，用于scanf，将数据存入相应变量中）</h4><h4 id="Qdnra">强制类型转换符：（类型）（例如：（double）a，是将 a 强制转换成 double 数据类型）</h4><h4 id="xafyT">下标运算符：（数组会用到）[]</h4><h4 id="HAIM5">其他运算符（暂时学不到的）位运算符，求字节运算符，成员运算符，函数调用运算符（）（对没错函数名后的这个括号是用来调用函数的运算符）</h4>其他运算符可在课本P48页或书附录中查看<p>关系运算符、逻辑运算符的结果只有真、假两种，即 true false</p><h3 id="zlywX">C语言表达式</h3><h4 id="BvSCf">算术表达式：2*a+sin(x)/0.5</h4><h4 id="LSTHB">关系表达式：（结果都是逻辑值0或1）x>0,y<x+z</h4><h4 id="BmzSq">逻辑表达式：（基于关系运算）x>0&&y<0(x大于0与y小于0是否同时成立）</h4><h4 id="lgJip">赋值表达式：a=3.1</h4><h4 id="uKr5D">逗号表达式：在定义变量时，逗号表达式可以一次性定义多个变量的数据类型和值，例如：int a=3,b=5,c=6;在运算中，如：a=(b+1,c+2,d-1)中，逗号表达式的最后一个表达式的值（d-1）会赋给a。</h4><h2 id="fWTyi">扩展阅读链接（引用链接）</h2>1. [超详细进制转换（二进制、八进制、十进制、十六进制）详解-CSDN博客](https://blog.csdn.net/weixin_53564801/article/details/123665194)2. [C语言中的运算符大全（内附优先级表）_c语言运算符号-CSDN博客](https://blog.csdn.net/m0_50919743/article/details/115755380)3. [ASCII码详细介绍 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/554933865)4. [C语言学习（八）整数（int、short、long）的具体介绍、不同进制表示、输出，sizeof、unsinged的使用_short int long-CSDN博客](https://blog.csdn.net/qq_37655329/article/details/120433772)5. [float 与 double 的区别_double和float的区别-CSDN博客](https://blog.csdn.net/mid_Faker/article/details/105388466)<h1 id="rG1nv">顺序结构程序设计</h1><h2 id="I68Me">基本数据类型的认识</h2>需要了解 C 语言中常见的数据类型，包括：<ul><li>char</li><li>short</li><li>int</li><li>long</li><li>long long </li><li>float</li><li>double</li><li>（bool）</li></ul><h2 id="j6Q06">如何写注释</h2>注释内容是给程序员看的，用来给程序内容做解释，编译器在进行编译期间不回去管注释内容<p>注释包括两种</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 这是一个单行注释，只能写一行注释</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">    这个叫做多行注释</span><br><span class="hljs-comment">    可以写N多行注释</span><br><span class="hljs-comment">    也可以写一篇小文档，</span><br><span class="hljs-comment">    可以介绍一下一个函数的功能</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h2 id="hnbUo">如何定义变量</h2>所谓变量，即支持修改数值<p>所谓常量，即定义后，数值不可进行修改（极个别特殊情况除外）</p><p>上文介绍过了常见的数据类型，以及变量名的<a href="https://www.yuque.com/shiawenayaya/gdindg/fvslnq8ursl9oegg#t6BJM">定义规则</a>，这里可以直接讲一下如何定义一个变量并且进行赋值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*</span><br><span class="hljs-comment">    模板是：</span><br><span class="hljs-comment">    数据类型 变量名 (赋值语句)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    如果在定义的同时，不指定数值，根据编译器的不同，有的会给赋值0，有的会赋值随机数</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> a = <span class="hljs-number">5</span>;<br>    <span class="hljs-type">int</span> c;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a = %d\n&quot;</span>, a);<span class="hljs-comment">//定义一个名字为a，数值为5的变量</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;c = %d\n&quot;</span>, c);<span class="hljs-comment">//定义一个变量，数值不确定</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/42374942/1728897484310-581b3106-8234-411b-a852-c8103f57e2a3.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> N 100</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-comment">// const int N = 100; 也可以使用const 变量定义一个常量N</span><br>    <span class="hljs-comment">// N = 25;            // error:N是一个常量，不可进行修改</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;N = %d\n&quot;</span>, N);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------------------------\n&quot;</span>); <span class="hljs-comment">// 这是分割线</span><br>    <span class="hljs-type">int</span> n = <span class="hljs-number">200</span>;<br>    <span class="hljs-comment">// 定义一个变量n，并且赋值为200</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;n = %d\n&quot;</span>,<span class="hljs-number">0</span> n);<br>    n = <span class="hljs-number">40</span>; <span class="hljs-comment">// 将变量n的数值修改为40</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;n = %d\n&quot;</span>, n);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/42374942/1728899177553-a9be7d27-e8c1-4061-bc5b-d11d2e626af2.png"></p><h2 id="OV9gz">算法概述</h2><h3 id="mTx3C">什么是算法</h3>算法就是解决问题的方法，构思问题的解决方式<p>数据结构就是规定数据的类型与组织形式。</p><p>算法+数据结构&#x3D;程序</p><p>计算机算法分为两种：数字运算与非数值运算（类似于数据库管理）</p><h3 id="ITjyV">如何表示算法</h3><h4 id="tTLuN">自然语言 用人话描述（有歧义）</h4><h4 id="dsSHv">流程图 直观形象，但耗时耗力</h4><h4 id="kvw2D">N-S流程图 占用面积小，作图简单（常考常用）</h4><h4 id="tagS0">伪代码 用编程语言的方式讲人话，然后再一步步改成编程语言的样子</h4><h3 id="ivLcV">程序的三种结构</h3><h4 id="mGPEH">顺序结构 逻辑向下不绕弯</h4><h4 id="XFNz1">选择结构 判断语句停一停，判断完成接着向下执行</h4><h4 id="S2eiM">循环结构 在循环体中绕圈，结束循环再往下走</h4><h2 id="tWmYq">C语句概述</h2><h3 id="KSOWh">C程序由若干个源文件组成</h3><h3 id="U1Qo2">源文件由预处理文件（#include）、数据声明（int a）、若干个函数组成</h3><h3 id="sjIus">函数由函数首部（main（））、函数体（{})组成</h3><h3 id="uQjqk">函数体由数据声明（int a）与执行语句（C语句）组成</h3><h3 id="xmMyv">C语句分为以下5类（P63）</h3><h4 id="BddeY">控制语句 用于选择、循环结构。负责进入循环，跳出循环，控制循环</h4><h4 id="vyunz">函数调用语句 printf() scanf()等函数语句</h4><h4 id="rKYX8">表达式语句 赋值操作，算数操作，加上分号就变成了语句。</h4><h4 id="Bd7jS">空语句 只有一个分号，什么也不做，用于特殊用途）</h4><h4 id="gTne4">复合语句 用{}扩起多条语句，常用于if判断后执行的语句</h4><h2 id="Hjl2I">赋值表达式和赋值语句</h2><h3 id="mJYye">赋值运算符 = （a=3 将3赋予给变量a）</h3><h3 id="scCey">复合的赋值运算符</h3><h4 id="C7crx">a+=3 等价于 a=a+3</h4><h4 id="BU1jz">x*=y+8 等价于x=x*(y+8) （相当于后面带上括号）</h4><h4 id="ESNIu">加减乘除模除等都可以和赋值符号一起复合</h4><h3 id="cWbI5">赋值表达式与赋值语句</h3><h4 id="v8euy">形式</h4>变量 赋值运算符 表达式<p>即 int a&#x3D;5</p><p>也可以是 int b&#x3D;（a&#x3D;5） （相当于b&#x3D;a&#x3D;5）</p><p>表达式没有分号 语句有分号</p><h4 id="EKfOI">用法</h4>赋值操作 a=7;<p>复合赋值操作 a&#x3D;b&#x3D;5；</p><p>其他语句 printf（“%d”，a&#x3D;b）； 相当于将b的值赋给a后，输出a的值</p><p>但是不能为printf（“%d”，a&#x3D;b；）（语句） 因为printf后面只能承接表达式</p><p>表达式能嵌入很多语句中，而语句本身不能嵌入到别的语句里</p><h4 id="aj6o8">类型转换</h4>当两个变量类型不一致的变量进行赋值操作时，会进行内部的类型转换<p>实型转整型 直接截取整数部分</p><p>整型转实型 将整数部分放入后，添0</p><p>双精度浮点型转单精度浮点型 截取7位有效位数</p><p>字符转整型 将ASCII码值带入</p><p>整型转字符 小于128的，直接换成ASCII码对应字符 大于128的 减去128，直到减不掉后，换成ASCII码对应字符</p><h4 id="Nmoyr">变量赋初值</h4>可以在定义时赋值 int a=6;<p>可以在定义后赋值 int a; a&#x3D;6;</p><p>可以一次性定义多个变量后赋予初值 int a&#x3D;2,b&#x3D;3,c&#x3D;4;</p><p>可以分开定义 int a,b,c&#x3D;2;</p><h2 id="ikoeD">数据输入输出</h2><h3 id="jew7I">C语言本身不提供输入输出语句，而C标准函数库提供（stdio.h）因此，需要在程序开头声明调用库文件（#include stdio.h)</h3><h3 id="zCQUJ">字符数据的输入输出</h3><h4 id="rt0Gk">putchar(字符) 一次输出一个字符</h4>可以直接输入字符，也可以用ASCII码（需要转换，如'\101'）<h4 id="cEcW6">getchar(字符)一次输入一个字符</h4>使用方法： a=getchar()<p>请注意：回车为控制字符，所以也会被getchar记录</p><h3 id="bSvYT">简单的格式输入输出</h3><h4 id="YLMWK">输出格式printf</h4>printf(格式控制，输出表列）<p>格式控制是用双引号括起来的字符串，他可以有普通字符与格式声明（%d等）</p><p>普通字符输出时原封不动保留，格式声明输出时会根据输出表列输出对应变量内容</p><p>printf(“%d,%d”,a,b);</p><h4 id="yvqJK">格式字符类型</h4><h5 id="jKstE">d格式 按十进制整型数据输出</h5><h5 id="zovtK">i格式 与d格式相同，通常使用d格式</h5><h5 id="Ozttn">c格式 输出一个字符（单引号引起）</h5><h5 id="DXbWr">s格式 用于输出字符串(双引号引起）</h5><h5 id="Qmgmn">f格式 用于输出实数（单精度双精度） %m.nf m为输出总位数，n为小数点后位数</h5><h5 id="AXIF0">e格式 输出指数形式的实数</h5><h4 id="h5gtI">输入格式scanf</h4>scanf（格式控制，地址表列）<p>格式控制同printf，地址表列是由变量的地址组成的（&amp;a&amp;b）</p><p>&amp;为地址运算符</p><p>请注意：在格式控制中怎么写的字符串，就要在输入数据的时候写入一样的字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;my age is %d&quot;</span>,&amp;a);<br><span class="hljs-comment">//输入的时候要写：my age is 5</span><br></code></pre></td></tr></table></figure><p>遇到%c%c%c这样的连续输入，不要用空格或换行隔开，因为空格与换行算控制字符</p><h2 id="lKzp4">顺序结构的认知（例3.7 3.8 3.9）</h2>在 C 语言中，默认从 main 函数开始执行<p>从上到下，逐条执行</p><p>顺序结构就是这样的，从上到下逐条进行进行执行代码</p><p>多实操，多练习。</p><h2 id="UHZ32">扩展阅读链接（引用链接）</h2>[什么是算法，表示算法的4种方法（小白必读）-CSDN博客](https://blog.csdn.net/x15297649174/article/details/137055815)<p><a href="https://blog.csdn.net/Real_Fool_/article/details/112226369">数据结构：基本概念【详解】_什么是数据结构-CSDN博客</a></p><h1 id="zXmOT">分支结构程序设计</h1><h2 id="t0WuI">条件判断</h2><h3 id="F1gYN">概念含义</h3>在顺序结构里，语句是按排列顺序依次执行的，但是生活经常有二选一的情况：<p>我去餐厅还是点外卖？（判断是去餐厅还是去点外卖）</p><p>考试如果不及格，是不是要补考？（判断考试的成绩是否及格，如果是，就不执行，如果否，则补考）</p><p>条件判断的结果是逻辑值：是 或 否，计算机用 真（1） 或 假（0） 来表示。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> (x&gt;<span class="hljs-number">0</span>)<span class="hljs-comment">//如果x的值大于0，则执行第一条printf语句</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,x);<br><span class="hljs-keyword">else</span><span class="hljs-comment">//否则 则执行else下面的printf语句</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,-x);<br></code></pre></td></tr></table></figure><h3 id="v1F3e">关系运算符和关系表达式</h3><h4 id="KHRFZ">C语言提供的关系运算符</h4><h5 id="LgLWI"><（小于）</h5><h5 id="m9UQm"><=（小于或等于）</h5><h5 id="kfFf1">>（大于）</h5><h5 id="iMGy8">>=（大于或等于）</h5><h5 id="uWsHK">==（等于）</h5><h5 id="CpdWx">!=（不等于）</h5>前四种关系运算符的优先级别相同，并且高于后两种（等于与不等于）<p>先<strong>比较大小，后比较相等关系</strong></p><p>关系运算符的优先级低于算术运算符（先加减乘除，算完再比较）</p><p>关系运算符的优先级高于赋值运算符（比较完了之后再将真假情况赋予变量中）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">b=c&gt;a+b（先算a+b，然后算c&gt;(a+b),最后将真值情况赋予b）<br>    如果c大于a与b的和，则将<span class="hljs-number">1</span>赋予b<br></code></pre></td></tr></table></figure><h4 id="ZvmIa">关系表达式</h4>表达式也可以进行关系比较<p>用的是表达式的值进行计算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">a+b&gt;b+c （先算a+b的值，再算b+c的值，最后将两个值比较）<br>(a&gt;b)&gt;(b&lt;c) (先算a&gt;b的真假，再算b&lt;c的真假，最后将两个值比较<br></code></pre></td></tr></table></figure><p>得到的值也是逻辑值(0,1)</p><p>容易出现的错误：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a=<span class="hljs-number">3</span>,b=<span class="hljs-number">2</span>,c=<span class="hljs-number">1</span><br>d=a&gt;b&gt;c<span class="hljs-comment">//先算a&gt;b,得到1,再拿1与c进行比较，1&gt;1不成立，便得到了0的结果</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,d);<span class="hljs-comment">//输出0</span><br></code></pre></td></tr></table></figure><h3 id="Lo9d2">逻辑运算符和逻辑表达式</h3><h4 id="qfkgo">概念</h4>有些判断需要的条件不止一个，且也不是能够比较大小的关系<p>例如：</p><p>课程不能挂科，并且体测必须大于80分才能评奖评优</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>（课程!=挂科&amp;&amp;体测&gt;<span class="hljs-number">80</span>）<br>    评奖评优<br></code></pre></td></tr></table></figure><h4 id="OH7uu">逻辑运算符及其有限次序</h4>C语言提供3种逻辑运算符<h5 id="A11rY">&& 逻辑与</h5><h5 id="BQgpE">|| 逻辑或</h5><h5 id="kswyK">！逻辑非</h5>&&与||是双目运算符，要求在运算符两侧都必须有运算对象<p>！是一目（一元）运算符，只要求在它的右侧有一个运算对象即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">a&amp;&amp;b （读作a与b）如果a与b都是真的，则这个表达式的值为真，有一个假的则整个表达式为假<br>a||b （读作a或b）如果a或b有一个是真的，则这个表达式的值为真，如果两边都是假的，则整个表达式为假<br>!a （读作非a）如果a一开始为真，加上逻辑非后则为假值，反之，则为真值<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1731306451999-eb18d532-0057-45c1-9012-01d2f577f430.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1731306460470-759e7193-c413-4275-b5a8-5e6cf3e2211d.png"></p><p>优先级情况：！（非）&gt; &amp;&amp;（与）&gt;||（或）</p><p>&amp;&amp;与||低于关系运算符（&gt;、&lt;、&#x3D;&#x3D;等）（也就是先计算逻辑后再判断关系）</p><p>!高于算术运算符（也就是先取反逻辑值后再开始比较逻辑或关系）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">！a||a&gt;b<br>    先计算！a，后计算a&gt;b，最后进行两者的逻辑运算<br></code></pre></td></tr></table></figure><h4 id="en0lg">逻辑表达式</h4>与关系表达式类似，也可以用表达式进行逻辑运算，结果也是0与1<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">5</span>&gt;<span class="hljs-number">3</span>&amp;&amp;<span class="hljs-number">8</span>&lt;<span class="hljs-number">4</span>-!<span class="hljs-number">0</span><br>表达式先从左往右求解<br>首先<span class="hljs-number">5</span>&gt;<span class="hljs-number">3</span>是真的，因此值为<span class="hljs-number">1</span><br>来到&amp;&amp;右面，<span class="hljs-number">8</span>&lt;<span class="hljs-number">4</span>-!<span class="hljs-number">0</span>，由于算术运算符优先级高，因此先算<span class="hljs-number">4</span>-!<span class="hljs-number">0</span><br>在这里，!<span class="hljs-number">0</span>的优先级高，先运算，因为<span class="hljs-number">0</span>为逻辑值<span class="hljs-number">0</span>（只要不是<span class="hljs-number">0</span>的值都是真的）所以取反为<span class="hljs-number">1</span><br>    所以<span class="hljs-number">4</span><span class="hljs-number">-1</span>为<span class="hljs-number">3</span><br>    <span class="hljs-number">8</span>&lt;<span class="hljs-number">3</span>，假，取<span class="hljs-number">0</span><br>    因此最后为<span class="hljs-number">1</span>&amp;&amp;<span class="hljs-number">0</span> 为假<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1731307021291-76ca982b-275b-4bac-b680-c2c5ca021d13.png"></p><h2 id="yjAKU">用if语句实现选择结构</h2><h3 id="XRDmZ">用if语句实现选择结构举例（例4.1 例4.2）</h3>需要注意的点<h4 id="R1k18">不要把相等（==）变成赋值（=），( if (a=1) )否则if会读取表达式的值（永远都是真的），不会执行不符合的情况下的语句</h4><h4 id="dZjry">如果if后有多条需要执行的语句，需要用花括号括起来{   }</h4><h4 id="UJUXP">if语句的一般形式</h4><h5 id="mJMSu">if（表达式）语句</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>(x&gt;y) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,x);<br></code></pre></td></tr></table></figure><h5 id="Yy5IW">if（表达式）语句1 else 语句2</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>(x&gt;y)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,x)<br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,y)<span class="hljs-comment">//比大小算法</span><br></code></pre></td></tr></table></figure><h4 id="RYf0b">if语句使用的说明（例4.3）</h4><h5 id="TTqej">if语句后面的表达式，一般为逻辑表达式或关系表达式，因为这样能根据其真值情况执行相应的语句</h5>简言之，if语句括号内最好是以逻辑值计算的表达式<p>变量等也可以在括号内，非0的值都为真值，因此会直接执行if下的语句</p><h5 id="QMh5k">if后面的语句要用分号隔开，但是if和else语句不用分号隔开</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>(x&gt;<span class="hljs-number">0</span>)<span class="hljs-comment">//不能加分号</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f&quot;</span>,x);<span class="hljs-comment">//加分号</span><br><span class="hljs-keyword">else</span><span class="hljs-comment">//不能加分号</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f&quot;</span>,-x);<br></code></pre></td></tr></table></figure><h5 id="vRgrT">else不能单独用，它属于if语句的一部分</h5><h5 id="Tfk5n">if后面的语句要执行多条语句的话，用大括号括起来</h5><h4 id="ZyMr6">使用嵌套if语句实现多层判断（例4.4）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>(a&gt;b)<br>    <span class="hljs-keyword">if</span>(a&gt;c)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,a)<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,c)<br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span>(b&gt;c)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,b)<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,c)<br><span class="hljs-comment">//else永远与与他最近的未配对的if匹配</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>(xxx&gt;x)<br>    printf...<br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span>(xxxx&gt;x)<br>可以改为<br><span class="hljs-keyword">if</span>(xxx&gt;x)<br>    printf...<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(xxxx&gt;x)<br></code></pre></td></tr></table></figure><h2 id="N0eU3">利用switch语句实现多分支选择结构</h2><h3 id="BayJ5">一般形式</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">switch</span>(表达式）<br>&#123;<br>    <span class="hljs-keyword">case</span> 常量表达式<span class="hljs-number">1</span>:语句<span class="hljs-number">1</span><br>    <span class="hljs-keyword">case</span> 常量表达式<span class="hljs-number">2</span>:语句<span class="hljs-number">2</span><br>    ...<br>    <span class="hljs-keyword">case</span> 常量表达式n:语句n<br>    <span class="hljs-built_in">default</span>(可有可无): 语句<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="FmEaN">switch后面的表达式可以是数值型或者字符型（用于匹配case内的常量表达式）</h4><h4 id="q1VSL">表达式的值与case的常量表达式相同时，则执行相应case的语句，若无，则执行default（默认）的语句</h4><h4 id="wMv54">不能有重复的case常量表达式（不然到底执行谁？）</h4><h4 id="n6fU3">case与default的顺序不影响执行结果</h4><h4 id="MCvA8">case的语句结束后会继续执行下面的case，不会进行语句结束的判断，因此应当在语句后加上break;</h4><h4 id="c0D27">由五得，可以多条case共用一组执行语句</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;A&#x27;</span>:<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;B&#x27;</span>:<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;C&#x27;</span>: <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;&gt;60\n&quot;</span>);<span class="hljs-keyword">break</span>;<br></code></pre></td></tr></table></figure><h2 id="se67Q">程序综合举例（例4.5 例4.6）</h2>课堂讲解<h2 id="kvMlb">扩展阅读链接（引用链接）</h2>[C语言的关系运算符、逻辑运算符和条件运算符-CSDN博客](https://blog.csdn.net/2402_88427700/article/details/143245268)<h1 id="n7wGd">循环结构程序设计</h1><h2 id="QIp1R">循环结构用在哪里？</h2><h3 id="uAbhF">遍历数据</h3>例如获取班里10名同学的数学成绩之和，需要先获取每一位同学的成绩。<h3 id="hQnFA">处理重复事物</h3>例如将所有成绩除以5、输出每一位同学的成绩等。<h2 id="VycBA">循环的三种结构</h2><h3 id="w3vIT">while语句（例5.1）</h3><h4 id="DN5yn">基本结构</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">while</span>（表达式）<br>    &#123;<br>        语句；<br>    &#125;<br><br></code></pre></td></tr></table></figure><p>同if，如果需要执行多条语句需要用花括号括起来。</p><h4 id="a2YPl">注意事项</h4>需要对表达式的值进行变化，否则会变成死循环。<p>while循环先判断循环条件是否成立，再执行循环体。</p><h3 id="EAbE3">do while语句（例5.2）</h3><h4 id="u9yls">基本结构</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">do</span><br>    循环体语句；<br>    <span class="hljs-keyword">while</span>（表达式）；<br></code></pre></td></tr></table></figure><h4 id="RrUD3">注意事项</h4>需要对表达式的值进行变化，否则会变成死循环。<p>do while循环先执行循环体语句，再判断表达式的循环条件是否成立。</p><p>while与do while可以转换，但是逻辑需要变化一点。</p><p>表达式为循环继续的条件，不是循环结束条件。</p><h3 id="wpNOC">for语句（例5.4）</h3><h4 id="wLsCC">一般形式</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>（表达式<span class="hljs-number">1</span>；表达式<span class="hljs-number">2</span>；表达式<span class="hljs-number">3</span>）<br>    语句；<br>    <span class="hljs-comment">//表达式1为循环变量初始化</span><br>    <span class="hljs-comment">//表达式2类似while的循环判断</span><br>    <span class="hljs-comment">//表达式3为循环变量的改变（防止出现死循环）</span><br>可理解为<br><span class="hljs-keyword">for</span>(循环变量赋初值;循环条件;循环变量增值（减值）)<br>    语句;<br></code></pre></td></tr></table></figure><h4 id="YO358">执行过程</h4>首先 执行表达式1（一般为循环变量的初始化）（如 int i=0）<p>然后 判断表达式2的循环条件是否成立（如 i&gt;&#x3D;0）</p><p>如果成立 则执行循环体内部的语句</p><p>在循环体内部语句全部执行完毕后，执行表达式3</p><p>表达式3一般为对循环变量的控制（如i++,i–等）</p><p>目的是为了不让整个for循环为死循环（永远出不去的循环）</p><h4 id="aHAcT">注意事项</h4>需要对表达式的值进行变化，否则会变成死循环。<p>do while循环先执行循环体语句，再判断表达式的循环条件是否成立。</p><p>while与do while可以转换，但是逻辑需要变化一点。</p><p>表达式为循环继续的条件，不是循环结束条件。</p><p>表达式1与表达式2在特定条件下可省略，如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++)<br>    &#123;<br>        <span class="hljs-comment">//语句;</span><br>    &#125;<br><span class="hljs-comment">//改为</span><br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(;i&lt;<span class="hljs-number">5</span>;)<br>    &#123;<br>        <span class="hljs-comment">//语句;</span><br>        i++;<br>    &#125;<br><span class="hljs-comment">//因为变量初始化与变量控制已经在for循环内外定义过了</span><br></code></pre></td></tr></table></figure><p>for循环经常用于数组的遍历（相当于一个一个地看数组里的值是什么），赋值等操作</p><h2 id="bqj1l">循环嵌套</h2><h3 id="GdLy3">定义</h3>循环内部再套一个循环，称为多层循环<p>while do..while for三种循环都可以互相嵌套</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">8</span>;i++)<br>    <span class="hljs-keyword">for</span>(j=<span class="hljs-number">1</span>;j&lt;<span class="hljs-number">8</span>;j++)<br>        语句;<br>相当于<span class="hljs-number">8</span>*<span class="hljs-number">8</span>执行<span class="hljs-number">64</span>次语句内容<br><br></code></pre></td></tr></table></figure><h3 id="XhfBy">注意事项</h3>两个for循环的循环变量应不同（例如上方的定义示例），否则会达不成预期甚至出现死循环<p>经常用于二维数组、冒泡算法（一种将数值从大到小排序的排序算法（一维数组））等。</p><p>注意多条语句用花括号括起来</p><h2 id="IIrNV">Continue与Break（例5.6）</h2>用于满足特地条件下对循环的控制，比如提前结束本轮循环或结束整个循环<p>类似于排队抢物品，如果物品没了，自然后面的人就已经拿不到了（break）</p><p>例如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">6</span>;i++)<br>    &#123;<br>    <span class="hljs-keyword">if</span>(i==<span class="hljs-number">2</span>) <br>        <span class="hljs-keyword">continue</span>;<span class="hljs-comment">//选择性跳过</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,i);<br>    &#125;<span class="hljs-comment">//输出1345</span><br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">6</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(i==<span class="hljs-number">4</span>)<br>            <span class="hljs-keyword">break</span>;<span class="hljs-comment">//跳出整个循环)</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,i);<br>    &#125;<span class="hljs-comment">//输出123</span><br></code></pre></td></tr></table></figure><p>注意：continue结束本轮循环后，依旧会执行表达式3的循环变量控制（i++&#x2F;i–等）</p><h2 id="E1FLE">循环程序举例(例5.8 例5.9 例5.10与九九乘法表输出)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> i, j;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">9</span>; i++) <br>    &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">9</span>; j++)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d*%d=%2d\t&quot;</span>, i, j, i * j);<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="Hregj">扩展阅读链接（引用链接）</h2>[for的用法详解，for循环完全攻略-CSDN博客](https://blog.csdn.net/wounler/article/details/117817554)<p><a href="https://blog.csdn.net/weixin_43883917/article/details/108693078">三种循环语句的详解和使用（for，while，do-while）_while循环-CSDN博客</a></p><h1 id="sf0UG">利用数组处理批量数据</h1><h2 id="ahn4v">数组是什么？</h2>假设，一名同学有1个成绩，100个同学就有100个成绩。<p>如果以我们之前的做法，就会去定义100个变量。</p><p>诚然，这是有简化方法的，即为：数组</p><p>用一个名字命名该数组，如score，数组的下标（即数组的序号，比如a[0]为a数组的第一个数据）为学生的序号</p><p>由此可得，score[15]&#x3D;32 为 第十五位学生的成绩是32</p><p>而通过对数组下标的操作，我们可以批量化处理数据</p><h2 id="sh33y">一维数组</h2><h3 id="sLngn">一维数组的定义</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>]<br>变量类型 数组名[常量表达式]<br></code></pre></td></tr></table></figure><p>1.数组名的命名规则与变量名的规则是一致的</p><p>2.易错点：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>]<br><span class="hljs-comment">//表明a数组有10个元素，但是不能访问到a[10]</span><br><span class="hljs-comment">//能访问到a[0] a[1] a[2] a[3]...a[9]</span><br></code></pre></td></tr></table></figure><p>3.常量表达式中只能是常量和符号常量，不能是变量（会报错）</p><p>数组定义好后，不能再随意变更大小（不能用变量的原因）</p><h3 id="NdlBK">一维数组的引用(例6.1）</h3>必须先定义后使用<p>一次只能引用一个数组元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>];<br>t=a[<span class="hljs-number">6</span>];<br>变量 赋值符号 数组名[下标]<br>    下标可以是整形表达式（结果是整数）<br>例如：a[<span class="hljs-number">2</span><span class="hljs-number">+1</span>] a[<span class="hljs-number">2</span>+i] a[<span class="hljs-number">2</span>*<span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><h3 id="VHgC6">一维数组的初始化</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//对全部元素赋初始值</span><br><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>&#125;;<br><span class="hljs-comment">//部分赋值</span><br><span class="hljs-type">int</span> a[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>&#125;;<span class="hljs-comment">//剩余没赋值的元素自动设为0</span><br><span class="hljs-comment">//可以根据初始值的长度赋予数组长度</span><br><span class="hljs-type">int</span> a[<span class="hljs-number">5</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br><span class="hljs-comment">//可以写成</span><br><span class="hljs-type">int</span> a[]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="JNpnr">一维数组程序举例（例6.2）（例6.3冒泡排序）</h3>此处建议做题的时候在草稿纸上画出来，方便记忆<p>此外，一定要注意：下标不能越界</p><h2 id="mTMWM">二维数组</h2><h3 id="WS3m6">二维数组的定义</h3>一维数组可以类比成条形码，二维数组可以类比成二维码，多一个维度<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>];<br><span class="hljs-number">3</span>为行<br><span class="hljs-number">4</span>为列<br>可承载<span class="hljs-number">3</span>*<span class="hljs-number">4</span>=<span class="hljs-number">12</span>个元素<br>类型名 数组名[常量表达式][常量表达式]<br></code></pre></td></tr></table></figure><p>甚至还有多维数组a[2][3][4](两页三行四列），很少用到。</p><h3 id="QAgBb">二维数组的引用</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">变量 赋值符 数组名[下标][下标]<br>b=a[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>]<br></code></pre></td></tr></table></figure><p>需要注意的是，二维数组可用的下标范围依然是0到n-1</p><p>例如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp">a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]<br>则行的取值范围为<span class="hljs-number">0</span><span class="hljs-number">-2</span><br>列的取值范围为<span class="hljs-number">0</span><span class="hljs-number">-3</span><br>则a[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] 是不可取的<br>a[<span class="hljs-number">2</span>][<span class="hljs-number">4</span>]是不可取的<br>最大到a[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><h3 id="oIl7v">二维数组的初始化</h3>可以分行给数组赋值<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=&#123;&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>&#125;,&#123;<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>&#125;,&#123;<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>&#125;&#125;;<br>把第一个花括号赋给第一行的元素<br>以此类推<br>即按行赋值<br></code></pre></td></tr></table></figure><p>可以将所有数据写在一个大括号内，按数组排列自动分配</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>&#125;;<br>第一行赋值四个，满了后换行接着赋值<br>容易遗漏，不易检查<br></code></pre></td></tr></table></figure><p>可以对部分元素赋初值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=&#123;&#123;<span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-number">2</span>&#125;,&#123;<span class="hljs-number">3</span>&#125;&#125;;<br>只对各行第一个元素（即下标为<span class="hljs-number">0</span>的列）赋值，其余未赋值的数均为<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>也可以各行中的某一元素赋值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=&#123;&#123;<span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-number">0</span>,<span class="hljs-number">6</span>&#125;,&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">11</span>&#125;&#125;;<br><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=&#123;&#123;<span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-number">5</span>,<span class="hljs-number">6</span>&#125;&#125;;<br><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=&#123;&#123;<span class="hljs-number">1</span>&#125;,&#123;&#125;,&#123;<span class="hljs-number">9</span>&#125;&#125;;<br></code></pre></td></tr></table></figure><p>同一维数组，可以根据长度自动分配，但是第二维不能省（一维二维都省了，无法得知能排几行几列）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>&#125;<br><span class="hljs-type">int</span> a[][<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="DWeXU">二维数组程序举例（例6.4，例6.5）</h3>二维数组用法：学生成绩数组——【第n科目】【科目对应的分数】<p>维度越多，承载的信息量越多</p><h2 id="hES3u">字符数组</h2><h3 id="wkFxs">字符数组定义</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">char</span> a[<span class="hljs-number">10</span>]=&#123;<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>&#125;<br>将五个字符送入数组中<br>如果元素没有填满数组，则会将下一个数组元素放入<span class="hljs-string">&#x27;\0&#x27;</span>空符号<br>遇到空符号，会自动停止读取<br></code></pre></td></tr></table></figure><p>注意：空格也算字符，如果元素有’ ‘，也算一个元素</p><p>同样的，可以省略数组长度，看元素个数自动赋长度：<a href="#VHgC6">3一维数组的初始化</a></p><p>二维数组同理</p><h3 id="hFlY8">字符数组引用</h3>与一维数组二维数组类似，获取的是字符。[2一维数组的引用(例6.1）](#NdlBK)<h3 id="oEv4i">字符串与字符串结束标志（课本例子）</h3>在C语言中，字符串作为字符数组来处理<p>如：hello 处理后是 ‘h’,’e’,’l’,’l’,’o’,’\0’</p><p>‘\0’就像队伍的最后，有一个人举着牌子：最尾处，表示这个数组&#x2F;字符串到了最后</p><p>因此，字符数组不看重长度，长度可以一开始定很长，然后用’\0’截取，获取到’\0’所在的下标，也就获得了数组的长度。</p><h3 id="J79Qw">字符数组输入输出</h3><h4 id="e6E4d">使用%s输入输出</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">char</span> c[]=&#123;<span class="hljs-string">&quot;china&quot;</span>&#125;;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,&amp;c);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,c<span class="hljs-string">&quot;);</span><br></code></pre></td></tr></table></figure><h4 id="jisSr">使用%c输出</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">char</span> a[<span class="hljs-number">10</span>]=&#123;&#125;;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">9</span>;i++)<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>,&amp;a[i]);<br>a[i]=<span class="hljs-string">&#x27;\0&#x27;</span><span class="hljs-comment">//scanf不加停止符，需要自己加</span><br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,a[i]);<br></code></pre></td></tr></table></figure><h3 id="bTGA1">字符串函数（选择题常用，程序题不常用）</h3>课本183-188<p><img src="https://cdn.nlark.com/yuque/0/2024/png/49204812/1732627796918-d96685e3-ffb2-43a2-b52c-ea817e1a6d87.png"></p><h3 id="eSG8b">字符数组应用举例（例6.7,例6.8）</h3><h2 id="jVoXK">扩展阅读链接（引用链接）</h2>[【排序算法】史上最通俗易懂的【冒泡排序】详解-CSDN博客](https://blog.csdn.net/k_kuo_k/article/details/111650681)<p><a href="https://blog.csdn.net/ZhaDeNianQu/article/details/119725736">C语言 数组定义和使用 - C语言零基础入门教程_c语言中数组的定义和使用-CSDN博客</a><a href="https://blog.csdn.net/JianZuoGuang/article/details/104280654">数组（Array)——数组介绍-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_29468639/article/details/120383685">常用的字符串函数详解_写出并解释字符串常用函数-CSDN博客</a></p><h1 id="qCEQb">使用函数实现模块化程序设计</h1><h2 id="qNQ1d">多函数的意义</h2>在之前的学习过程中，我们可以发现，一部分运算也包含在主程序中。<p>如果要反复利用这部分的运算，就需要复制，粘贴，再写一遍。效率很低。</p><p>所以多函数的意义在于，他将程序——模块化。使用对应功能，只需要在主程序里调用。</p><p>好处是，修改算法只在模块内实现，不用大刀阔斧对整个程序进行修改</p><p>类似于上游加工厂和下游组装厂的关系。</p><h2 id="qKIpB">多函数举例/函数的定义（例7.1 例1.3）</h2>函数由以下几个要素组成<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp">无参函数（不需要向函数提交数据（参数），即可调用）<br>返回的数据类型 函数名（）<br>&#123;<br>    函数体<br>&#125;<br>有参函数<br>返回的数据类型 函数名（数据类型 函数形参，数据类型 函数形参....）<br>&#123;<br>    函数体<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>返回的数据类型：即这个函数结束后，向其他函数递交的数据的数据类型</p><p>函数名：函数的名字，尽量做到见名知意，能想到这个函数对应的什么功能</p><p>函数形参:只是表明这个函数需要 什么数据类型的数据，在调用的时候，如果不给数据则会报错</p><p>函数体：与之前写main函数一致，不过最后的return语句一定要加（不能总是return 0了），他代表了这个函数返回的数值。</p><h2 id="PyDvU">函数的调用</h2>有两种函数的调用<h3 id="IWuZD">在main函数中，首先要声明自己要使用的函数，随后，无参函数可以直接以函数（）调用，有参函数需要一个变量承接它的返回值</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> a,b,c;<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">max</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>;<span class="hljs-comment">//表示要在main函数里调用max函数</span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">printstar</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-built_in">printstar</span>()<span class="hljs-comment">//直接调用无参函数</span><br>    c=<span class="hljs-built_in">max</span>(a,b)<span class="hljs-comment">//有参函数，参数类型要对应</span><br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-built_in">max</span>(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)<br>&#123;<br>    ....<br>    <span class="hljs-keyword">return</span> max;<span class="hljs-comment">//return 将最大值返回给主函数</span><br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">printStar</span><span class="hljs-params">()</span><span class="hljs-comment">//void类型代表该函数没有返回值（只做打印工作）</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*****&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>函数调用：变量&#x3D;函数名（实际参数）</p><p>实际参数与形式参数：简单理解为，我们递交数据(实际参数)给函数，函数方将我们的数据以他们的方式定义（形式参数），并参与函数运算中。</p><h3 id="qgqxk">将要调用的函数放在main函数前，可不用声明。</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">max</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    ....<br>    <span class="hljs-keyword">return</span> max;<span class="hljs-comment">//return 将最大值返回给主函数</span><br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">printStar</span><span class="hljs-params">()</span><span class="hljs-comment">//void类型代表该函数没有返回值（只做打印工作）</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*****&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> a,b,c;<br>    <span class="hljs-built_in">printstar</span>()<span class="hljs-comment">//直接调用无参函数</span><br>    c=<span class="hljs-built_in">max</span>(a,b)<span class="hljs-comment">//有参函数，参数类型要对应</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="XlnoC">函数的用法</h2><h3 id="qiT1s">函数语句</h3>调用没有返回值的函数，函数调用作为一个语句存在：printstar();<h3 id="BfkXR">函数表达式</h3>有参函数只要有返回值，他的单独存在也可成为表达式。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">c=<span class="hljs-number">2</span>*<span class="hljs-built_in">max</span>(a,b)<span class="hljs-comment">//首先计算max函数，将函数的值作为表达式的值，与2相乘，最后将整个表达式的值带入c变量中</span><br></code></pre></td></tr></table></figure><h3 id="rFb8J">作为函数的参数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,<span class="hljs-built_in">max</span>(a,b));<br></code></pre></td></tr></table></figure><h2 id="jFRYB">函数的嵌套调用和递归调用</h2><h3 id="zIgWo">函数嵌套调用（例7.3）</h3>简单来说，函数里面套函数，最简单<p>main函数都能调用别的函数，函数内部为什么不能再调用别的函数？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">max_4</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b,<span class="hljs-type">int</span> c,<span class="hljs-type">int</span> d)</span></span>;<br>    <span class="hljs-type">int</span> a,b,c,d,max;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter 4 integer numbers:&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d);<br>    max=<span class="hljs-built_in">max_4</span>(a,b,c,d);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;max=%d&quot;</span>,max);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">max_4</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b,<span class="hljs-type">int</span> c,<span class="hljs-type">int</span> d)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">max</span><span class="hljs-params">(<span class="hljs-type">int</span>,<span class="hljs-type">int</span>)</span></span>;<br>    <span class="hljs-type">int</span> m;<br>    m=<span class="hljs-built_in">max</span>(a,b);<br>    m=<span class="hljs-built_in">max</span>(m,c);<br>    m=<span class="hljs-built_in">max</span>(m,d);<br>    <span class="hljs-keyword">return</span> (m);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">max</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(x&gt;y)<br>        <span class="hljs-keyword">return</span> x;<br>    <span class="hljs-keyword">else</span> <br>        <span class="hljs-keyword">return</span> y;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="HZ8Vq">函数递归调用（例7.4，例7.5）</h3>基于函数嵌套调用，不过是自己调用自己。<p>逻辑一定要清晰，对于达成目的要明了，否则可能绕不出来。</p><h2 id="PuuqE">数组作为函数参数</h2><h3 id="U3oaV">数组元素作为函数参数（例7.6）</h3>与变量作为函数参数一致，主要区别是可以利用for循环将不同数组元素带入函数运算<h3 id="n3lEi">数组名作函数参数（例7.7）</h3>要注意的是，定义函数时，形参为：数据类型 数组名【数组长度】<p>调用函数时，只需要将数组名放入函数内</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">float</span> <span class="hljs-title">average</span><span class="hljs-params">(<span class="hljs-type">float</span> array[<span class="hljs-number">10</span>])</span></span><br><span class="hljs-function"></span>&#123;<br>    ...<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">float</span> s,score[<span class="hljs-number">10</span>]<br>    s=<span class="hljs-built_in">average</span>(score);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DDBOz">局部变量与全局变量</h2>一句话概括：函数内部的变量只能在函数内部运作，全局变量可以在所有函数里操作<p>局部函数定义在函数内部</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> a,b,c;<span class="hljs-comment">//局部变量</span><br>&#125;<br></code></pre></td></tr></table></figure><p>全局变量定义在函数外部，一般定义在所有函数的最开始</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> a,b,c,d;<span class="hljs-comment">//全局变量</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123; <br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>如果全局变量与局部变量名字冲突，则屏蔽全局变量，只使用函数内部的局部变量。</p><h2 id="TwJU1">静态变量与自动变量(例7.12）</h2>一句话概括：自动变量的值在函数结束时不会保存，如果重新进入函数，静态变量的值会保持不变（还是上一次的结果），但自动变量会重新初始化。<h2 id="GXF9H">扩展阅读链接（引用链接）</h2>[递归详解——让你真正明白递归的含义-CSDN博客](https://blog.csdn.net/weixin_44572229/article/details/119909728)<p><a href="https://blog.csdn.net/bleauchat/article/details/119429254">c语言中的局部变量和全局变量_c语言全局变量-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_40162095/article/details/113992025">看完这篇文章一定弄懂C语言数组作为函数参数的用法_c语言数组在函数参数中的表示-CSDN博客</a></p><h1 id="Hbz5t">致谢</h1><h2 id="PX8Cb">是阿文ayaya想说：</h2>感谢大家阅读这份教案，我在创社的设想就是：提升大学生的计算机素养！专业的也好不专业的也好，计算机已经成为了大家生活不可或缺的部分。特别是学习与工作上。所以如果有人真的能因为我们所做的努力而喜欢计算机，甚至加入我们的社团贡献自己的一份力量，我真的会很欣慰，我不在是一个人在战斗。<p>创办本课程的原因有几点：</p><p>1.老师的教学方式让人难以理解。</p><p>2.培养我们学院专业的计算机素养与编程基础。</p><p>3.想吸引更多人加入我们社团。</p><p>因此我们创办了这个课程，这个课程企划、执行基本上都由我一人创建，自己的精力有限，找了我的好朋友Cookie帮忙，做这个东西蛮辛苦的。（</p><p>我们社团也还在起步阶段，如果你对社团有什么想说的欢迎在群聊里说出来，不要有什么顾虑。（群没人水就沉了5555）</p><p>最后感谢你的支持，希望你学业进步！</p><h2 id="ImSGt">Cookie想说：</h2>感谢国家，感谢党，感谢这个美丽的祖国，感谢CCTV，感谢这个世界<p>感谢食堂不杀之恩</p><p>感谢我那从未出现的女朋友，感谢她没有阻挡我本科时期的脚步，智者不入爱河，建设美丽中国！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>欢迎来到玩机社</title>
    <link href="/posts/2c841c57/"/>
    <url>/posts/2c841c57/</url>
    
    <content type="html"><![CDATA[<p>欢迎大家来到山体玩机社，一个交流计算机科技，硬件软件，数字媒体等跟计算机技术有关的平台。<br>我们的宗旨是：专注学生视角，探索前沿科技。</p><h2 id="我们提供的服务有："><a href="#我们提供的服务有：" class="headerlink" title="我们提供的服务有："></a>我们提供的服务有：</h2><p>济南校区 线上&#x2F;线下 电脑问题解决（非硬件问题）<br>日照校区 线上 电脑问题解决（非硬件问题）<br>有趣的线下科技相关活动（济南校区）<br>线上计算机课堂（济南&#x2F;日照校区 哔哩哔哩官方账号发布）</p><h2 id="如何获取服务？"><a href="#如何获取服务？" class="headerlink" title="如何获取服务？"></a>如何获取服务？</h2><p>若咨询电脑相关问题，可进入玩机社QQ群：<a href="https://qm.qq.com/q/HaSVnEpTmU">679383826</a>，@群主或管理员进行咨询。<br>若有电脑问题，请至济南校区一号教学楼1615，我们会竭尽所能为您解决。<br>若遇到硬件问题，很抱歉，本社不处理硬件相关问题，我们仅能给予一定建议，并推荐您去电脑官方售后维修。</p><h2 id="如何加入玩机社？"><a href="#如何加入玩机社？" class="headerlink" title="如何加入玩机社？"></a>如何加入玩机社？</h2><p>如果您对计算机感兴趣，并愿意加入我们，请至1615详谈。<br>请关注我们的官方哔哩哔哩账号，玩机社Github账号，玩机社QQ群（<a href="https://sdpei-ctca.github.io/about">关于页</a>）！</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
